{
  "address": "0x35Cd79061cc6021b4240a408916919227bDdafcE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pana",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sPana",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_karsha",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPanaAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        }
      ],
      "name": "DistributorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakingMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "warmup",
          "type": "uint256"
        }
      ],
      "name": "WarmupSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "KARSHA",
      "outputs": [
        {
          "internalType": "contract IKarsha",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PANA",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        }
      ],
      "name": "addApprovedDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "allowExternalStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedDepositor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IPanaAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "contract IDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distribute",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "index",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        }
      ],
      "name": "removeApprovedDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sPANA",
      "outputs": [
        {
          "internalType": "contract IsPana",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsToNextEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPanaAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_distributor",
          "type": "address"
        }
      ],
      "name": "setDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_epochLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_firstEpochNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_firstEpochTime",
          "type": "uint256"
        }
      ],
      "name": "setFirstEpoch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_migrator",
          "type": "address"
        }
      ],
      "name": "setStakingMigrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingMigrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_trigger",
          "type": "bool"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x801baf1a1a50e94f5b5909ec2d211c39bc9140ba965c3239e6c51e377d2ed59a",
  "receipt": {
    "to": null,
    "from": "0x2d494Cb0a923009C471B9512571048560a44556A",
    "contractAddress": "0x35Cd79061cc6021b4240a408916919227bDdafcE",
    "transactionIndex": 1,
    "gasUsed": "1823136",
    "logsBloom": "0x
    "blockHash": "0x2b37754a9c982a7d1d729860b5275a989213c7cfc73c6511a9de0b9a2458a604",
    "transactionHash": "0x801baf1a1a50e94f5b5909ec2d211c39bc9140ba965c3239e6c51e377d2ed59a",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 658475,
        "transactionHash": "0x801baf1a1a50e94f5b5909ec2d211c39bc9140ba965c3239e6c51e377d2ed59a",
        "address": "0x35Cd79061cc6021b4240a408916919227bDdafcE",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x00000000000000000000000074db8cbccaf7aef5f5faf8b753e994563ab5edb3"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2b37754a9c982a7d1d729860b5275a989213c7cfc73c6511a9de0b9a2458a604"
      }
    ],
    "blockNumber": 658475,
    "cumulativeGasUsed": "1823136",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x28a4d7A1da539cAAb96b615cd454e2B446B16F1c",
    "0x10e584566CAc365dDD35CEE6Bf2d35b58970D0B7",
    "0x07dD7ba57DBcDC7e11f675C22F31BE58C02d84Af",
    "0x74Db8CBCCaF7aef5F5FAf8B753e994563AB5Edb3"
  ],
  "solcInputHash": "d9d1c67e1906d81f843559f4e9c958a2",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pana\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sPana\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_karsha\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPanaAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"}],\"name\":\"DistributorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakingMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"warmup\",\"type\":\"uint256\"}],\"name\":\"WarmupSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KARSHA\",\"outputs\":[{\"internalType\":\"contract IKarsha\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PANA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"addApprovedDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"allowExternalStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IPanaAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"contract IDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distribute\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"removeApprovedDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sPANA\",\"outputs\":[{\"internalType\":\"contract IsPana\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsToNextEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPanaAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"setDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_firstEpochNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_firstEpochTime\",\"type\":\"uint256\"}],\"name\":\"setFirstEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setStakingMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingMigrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_trigger\",\"type\":\"bool\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"index()\":{\"returns\":{\"_0\":\"uint\"}},\"rebase()\":{\"returns\":{\"_0\":\"uint256\"}},\"setDistributor(address)\":{\"params\":{\"_distributor\":\"address\"}},\"setFirstEpoch(uint256,uint256,uint256)\":{\"params\":{\"_epochLength\":\"uint\",\"_firstEpochNumber\":\"uint\",\"_firstEpochTime\":\"uint\"}},\"setStakingMigrator(address)\":{\"params\":{\"_migrator\":\"address\"}},\"stake(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_to\":\"address\"},\"returns\":{\"_0\":\"uint\"}},\"unstake(address,uint256,bool)\":{\"params\":{\"_amount\":\"uint\",\"_to\":\"address\",\"_trigger\":\"bool\"},\"returns\":{\"amount_\":\"uint\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"index()\":{\"notice\":\"returns the sPana index, which tracks rebase growth\"},\"migrate()\":{\"notice\":\"allow approved address to withdraw Pana\"},\"rebase()\":{\"notice\":\"trigger rebase if epoch over\"},\"secondsToNextEpoch()\":{\"notice\":\"seconds until the next epoch begins\"},\"setDistributor(address)\":{\"notice\":\"sets the contract address for LP staking\"},\"setFirstEpoch(uint256,uint256,uint256)\":{\"notice\":\"initialize first rebase parameters\"},\"setStakingMigrator(address)\":{\"notice\":\"set Staking Contract migrator\"},\"stake(address,uint256)\":{\"notice\":\"stake Pana\"},\"stakingSupply()\":{\"notice\":\"staked Karsha in terms of Pana\"},\"unstake(address,uint256,bool)\":{\"notice\":\"redeem Pana/sPana for Karsha/Pana\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/Staking.sol\":\"PanaStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/access/PanaAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IPanaAuthority.sol\\\";\\n\\nabstract contract PanaAccessControlled {\\n\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IPanaAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IPanaAuthority public authority;\\n\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IPanaAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n    \\n\\n    /* ========== MODIFIERS ========== */\\n    \\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    /* ========== GOV ONLY ========== */\\n    \\n    function setAuthority(IPanaAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x034e5499a57b5a80ba7315a07b54a800876e4e9143ec38855118dc2ff0af9311\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IDistributor {\\n    function distribute() external;\\n\\n    function bounty() external view returns (uint256);\\n\\n    function retrieveBounty() external returns (uint256);\\n\\n    function nextRewardAt(uint256 _rate, bool _fixedAPY) external view returns (uint256);\\n\\n    function nextRewardFor(address _recipient) external view returns (uint256);\\n\\n    function setBounty(uint256 _bounty) external;\\n    \\n    function addRecipient(address _recipient, uint256 _rewardRate, bool _fixedAPY) external;\\n\\n    function removeRecipient(uint256 _index) external;\\n\\n    function setAdjustment(\\n        uint256 _index,\\n        bool _add,\\n        uint256 _rate,\\n        uint256 _target\\n    ) external;\\n}\\n\",\"keccak256\":\"0xde4e02dbf4401306d4c6e0b45674e2b00a534c755c0ec16997705f422538c58e\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa142440b0e1c51ece24b6d074ac883b34e1f33a2472773eeaaf4871875904d09\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IKarsha.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IKarsha is IERC20 {\\n  function mint(address _to, uint256 _amount) external;\\n\\n  function burn(address _from, uint256 _amount) external;\\n\\n  function index() external view returns (uint256);\\n  \\n  function balanceOfPANA(address _address) external view returns (uint256);\\n\\n  function balanceFrom(uint256 _amount) external view returns (uint256);\\n\\n  function balanceTo(uint256 _amount) external view returns (uint256);\\n\\n  function transfer(address _to,uint256 _amount) external override returns (bool);\\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool);\\n}\\n\",\"keccak256\":\"0x4eb885428aff0f1a2480f65a941644c73fda6fb733398b97375babf12abe928a\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IPanaAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IPanaAuthority {\\n    /* ========== EVENTS ========== */\\n    \\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event DistributionVaultPushed(address indexed from, address indexed to, bool _effectiveImmediately); \\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n    event DistributionVaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n    \\n    function governor() external view returns (address);\\n    function guardian() external view returns (address);\\n    function policy() external view returns (address);\\n    function vault() external view returns (address);\\n    function distributionVault() external view returns (address);\\n}\",\"keccak256\":\"0xc49dc603c39b5cbd2e18e02176ef489bd89dde552495236e9798ae49a9f2e875\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IsPana.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IsPana is IERC20 {\\n    function rebase( uint256 panaProfit_, uint epoch_) external returns (uint256);\\n\\n    function circulatingSupply() external view returns (uint256);\\n\\n    function gonsForBalance( uint amount ) external view returns ( uint );\\n\\n    function balanceForGons( uint gons ) external view returns ( uint );\\n\\n    function index() external view returns ( uint );\\n\\n    function toKARSHA(uint amount) external view returns (uint);\\n\\n    function fromKARSHA(uint amount) external view returns (uint);\\n    \\n}\\n\",\"keccak256\":\"0x2873d8efa59dbd4392aedf641cb69ff738d9349a6241ade93130d72a787be591\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\",\"keccak256\":\"0xbdd4f99088de7c23383b043055646de013b1312166a9bfa05e3995cdcf7ae022\",\"license\":\"AGPL-3.0-only\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint c) {\\n        if (a > 3) {\\n            c = a;\\n            uint b = add( div( a, 2), 1 );\\n            while (b < c) {\\n                c = b;\\n                b = div( add( div( a, b ), b), 2 );\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x45cfc2aa9d85df2add98d4e899d834c646e8ce7001b00ead65f07dbefbcebeef\",\"license\":\"AGPL-3.0\"},\"contracts/staking/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\nimport \\\"../libraries/SafeMath.sol\\\";\\nimport \\\"../libraries/SafeERC20.sol\\\";\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IsPana.sol\\\";\\nimport \\\"../interfaces/IKarsha.sol\\\";\\nimport \\\"../interfaces/IDistributor.sol\\\";\\n\\nimport \\\"../access/PanaAccessControlled.sol\\\";\\n\\ncontract PanaStaking is PanaAccessControlled {\\n    /* ========== DEPENDENCIES ========== */\\n\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IsPana;\\n    using SafeERC20 for IKarsha;\\n\\n    /* ========== EVENTS ========== */\\n\\n    event DistributorSet(address distributor);\\n    event WarmupSet(uint256 warmup);\\n    event StakingMigrated(uint256 amount);\\n\\n    /* ========== DATA STRUCTURES ========== */\\n\\n    struct Epoch {\\n        uint256 length; // in seconds\\n        uint256 number; // since inception\\n        uint256 end; // timestamp\\n        uint256 distribute; // amount\\n    }\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IERC20 public immutable PANA;\\n    IsPana public immutable sPANA;\\n    IKarsha public immutable KARSHA;\\n\\n    Epoch public epoch;\\n    bool private firstEpochSet;\\n\\n    IDistributor public distributor;\\n\\n    bool private _allowedExternalStaking;\\n    mapping(address => bool) public approvedDepositor;\\n\\n    address public stakingMigrator;\\n\\n    /* ========== CONSTRUCTOR ========== */\\n\\n    constructor(\\n        address _pana,\\n        address _sPana,\\n        address _karsha,\\n        address _authority\\n    ) PanaAccessControlled(IPanaAuthority(_authority)) {\\n        require(_pana != address(0), \\\"Zero address: PANA\\\");\\n        PANA = IERC20(_pana);\\n        require(_sPana != address(0), \\\"Zero address: sPANA\\\");\\n        sPANA = IsPana(_sPana);\\n        require(_karsha != address(0), \\\"Zero address: KARSHA\\\");\\n        KARSHA = IKarsha(_karsha);\\n\\n        firstEpochSet = false;\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    /**\\n     * @notice stake Pana\\n     * @param _to address\\n     * @param _amount uint\\n     * @return uint\\n     */\\n    function stake(\\n        address _to,\\n        uint256 _amount\\n    ) external returns (uint256) {\\n        // check if external staking is not allowed, only bond depositor should be able to stake it.\\n        if (!_allowedExternalStaking) {\\n            require(approvedDepositor[msg.sender], \\\"External Staking is not allowed - Only approved depositor allowed\\\");\\n        }\\n        \\n        rebase();\\n        PANA.safeTransferFrom(msg.sender, address(this), _amount);\\n        \\n        return _send(_to, _amount);\\n    }\\n\\n    /**\\n     * @notice redeem Pana/sPana for Karsha/Pana\\n     * @param _to address\\n     * @param _amount uint\\n     * @param _trigger bool\\n     * @return amount_ uint\\n     */\\n    function unstake(\\n        address _to,\\n        uint256 _amount,\\n        bool _trigger\\n    ) external returns (uint256 amount_) {\\n        amount_ = _amount;\\n        uint256 bounty;\\n        if (_trigger) {\\n            bounty = rebase();\\n        }\\n\\n        KARSHA.burn(msg.sender, _amount); // amount was given in Karsha terms\\n        amount_ = KARSHA.balanceFrom(amount_).add(bounty); // convert amount to Pana terms & add bounty\\n    \\n        require(amount_ <= PANA.balanceOf(address(this)), \\\"Insufficient Pana balance in contract\\\");\\n        PANA.safeTransfer(_to, amount_);\\n    }\\n\\n    /**\\n     * @notice trigger rebase if epoch over\\n     * @return uint256\\n     */\\n    function rebase() public returns (uint256) {\\n        require(firstEpochSet == true, \\\"Epoch not Initialized\\\");\\n        uint256 bounty;\\n        if (epoch.end <= block.timestamp) {\\n            sPANA.rebase(epoch.distribute, epoch.number);\\n\\n            epoch.end = epoch.end.add(epoch.length);\\n            epoch.number++;\\n\\n            if (address(distributor) != address(0)) {\\n                distributor.distribute();\\n                bounty = distributor.retrieveBounty(); // Will mint Pana for this contract if there exists a bounty\\n            }\\n            uint256 balance = PANA.balanceOf(address(this));\\n            uint256 staked = sPANA.circulatingSupply();\\n            if (balance <= staked.add(bounty)) {\\n                epoch.distribute = 0;\\n            } else {\\n                epoch.distribute = balance.sub(staked).sub(bounty);\\n            }\\n        }\\n        return bounty;\\n    }\\n\\n    // Set Depositor Contract\\n    function addApprovedDepositor(address _depositor) external onlyGovernor {\\n        require(_depositor != address(0), \\\"Zero address: _depositor\\\");\\n        approvedDepositor[_depositor] = true;\\n    }\\n\\n    // Remove Depositor Contract\\n    function removeApprovedDepositor(address _depositor) external onlyGovernor {\\n        require(_depositor != address(0), \\\"Removal: Invalid Depositor\\\");\\n        require(approvedDepositor[_depositor], \\\"Already set to false\\\");\\n        approvedDepositor[_depositor] = false;\\n    }\\n    \\n    // Allow External Staking directly using PANA\\n    function allowExternalStaking(bool allow) external onlyGovernor {\\n        _allowedExternalStaking = allow;\\n    }\\n\\n\\n    /**\\n     * @notice allow approved address to withdraw Pana\\n     */\\n    function migrate() external {\\n        require(stakingMigrator == msg.sender, \\\"Not Approved\\\");\\n        uint256 _amount = PANA.balanceOf(address(this));\\n        PANA.safeTransfer(msg.sender, _amount);\\n        emit StakingMigrated(_amount);\\n    }\\n\\n    /**\\n     * @notice set Staking Contract migrator\\n     * @param _migrator address\\n     */\\n    function setStakingMigrator(address _migrator) external onlyGovernor {\\n        require(_migrator != address(0), \\\"Zero address: Staking Migrator\\\");\\n        stakingMigrator = _migrator;\\n    }\\n\\n    /* ========== INTERNAL FUNCTIONS ========== */\\n\\n    /**\\n     * @notice send staker their amount as Karsha\\n     * @param _to address\\n     * @param _amount uint\\n     */\\n    function _send(\\n        address _to,\\n        uint256 _amount\\n    ) internal returns (uint256) {\\n        KARSHA.mint(_to, KARSHA.balanceTo(_amount)); // send as Karsha (convert units from Pana)\\n        return KARSHA.balanceTo(_amount);\\n    }\\n\\n    /* ========== VIEW FUNCTIONS ========== */\\n\\n    /**\\n     * @notice returns the sPana index, which tracks rebase growth\\n     * @return uint\\n     */\\n    function index() public view returns (uint256) {\\n        return sPANA.index();\\n    }\\n    \\n    /**\\n     * @notice seconds until the next epoch begins\\n     */\\n    function secondsToNextEpoch() external view returns (uint256) {\\n        return epoch.end.sub(block.timestamp);\\n    }\\n\\n    /**\\n     * @notice staked Karsha in terms of Pana\\n     */\\n    function stakingSupply() external view returns (uint256) {\\n        return KARSHA.balanceFrom(IERC20(address(KARSHA)).totalSupply());\\n    }\\n\\n    /* ========== MANAGERIAL FUNCTIONS ========== */\\n\\n    /**\\n     * @notice sets the contract address for LP staking\\n     * @param _distributor address\\n     */\\n    function setDistributor(address _distributor) external onlyGovernor {\\n        distributor = IDistributor(_distributor);\\n        emit DistributorSet(_distributor);\\n    }\\n\\n    /**\\n     * @notice initialize first rebase parameters\\n     * @param _epochLength uint\\n     * @param _firstEpochNumber uint\\n     * @param _firstEpochTime uint\\n     */\\n    function setFirstEpoch(\\n        uint256 _epochLength,\\n        uint256 _firstEpochNumber,\\n        uint256 _firstEpochTime\\n    ) external onlyGovernor {\\n        require(firstEpochSet == false, \\\"Cannot Initialize epoch multiple times\\\");\\n        epoch = Epoch({length: _epochLength, number: _firstEpochNumber, end: _firstEpochTime, distribute: 0});\\n        firstEpochSet = true;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2c2bdbb774a8d2282b4c3bca804065bb5c2e8aaa6c910e0d484033833e8aaac3\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x610120604052600c60e08190526b15539055551213d49256915160a21b61010090815262000031916000919062000218565b503480156200003f57600080fd5b506040516200225938038062002259833981810160405260808110156200006557600080fd5b5080516020820151604080840151606090940151600180546001600160a01b0319166001600160a01b038316908117909155915193949293909182917f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b03841662000119576040805162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a2050414e4160701b604482015290519081900360640190fd5b6001600160601b0319606085901b166080526001600160a01b03831662000187576040805162461bcd60e51b815260206004820152601360248201527f5a65726f20616464726573733a207350414e4100000000000000000000000000604482015290519081900360640190fd5b6001600160601b0319606084901b1660a0526001600160a01b038216620001f5576040805162461bcd60e51b815260206004820152601460248201527f5a65726f20616464726573733a204b4152534841000000000000000000000000604482015290519081900360640190fd5b5060601b6001600160601b03191660c05250506006805460ff19169055620002c4565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200025057600085556200029b565b82601f106200026b57805160ff19168380011785556200029b565b828001600101855582156200029b579182015b828111156200029b5782518255916020019190600101906200027e565b50620002a9929150620002ad565b5090565b5b80821115620002a95760008155600101620002ae565b60805160601c60a05160601c60c05160601c611f0f6200034a6000398061057752806105dc5280610989528061175e528061178d5280611c0c5280611c3c5280611d4a525080610789528061116952806112aa528061151f52508061067452806107565280610d05528061104052806110e6528061120352806114685250611f0f6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638d453dec116100d8578063adc9772e1161008c578063bfe1092811610066578063bfe10928146103a7578063d7b07d30146103af578063f377e7cf146103d557610182565b8063adc9772e1461036b578063af14052c14610397578063bf7e214f1461039f57610182565b8063900cf0cf116100bd578063900cf0cf1461032d5780639483c1d71461035b5780639fef32cc1461036357610182565b80638d453dec146102fc5780638fd3ab801461032557610182565b806345d15b091161013a57806375619ab51161011457806375619ab5146102a857806377e93ca8146102ce5780637a9e5e4b146102d657610182565b806345d15b09146102405780634c11ac931461027a57806353be7d7a146102a057610182565b80632986c0e51161016b5780632986c0e5146101ee5780632db3558f146101f6578063401e52b91461021c57610182565b80631304cada1461018757806321d0af34146101a8575b600080fd5b6101a66004803603602081101561019d57600080fd5b503515156103dd565b005b6101dc600480360360608110156101be57600080fd5b506001600160a01b038135169060208101359060400135151561053c565b60408051918252519081900360200190f35b6101dc610785565b6101a66004803603602081101561020c57600080fd5b50356001600160a01b0316610811565b610224610987565b604080516001600160a01b039092168252519081900360200190f35b6102666004803603602081101561025657600080fd5b50356001600160a01b03166109ab565b604080519115158252519081900360200190f35b6101a66004803603602081101561029057600080fd5b50356001600160a01b03166109c0565b610224610b95565b6101a6600480360360208110156102be57600080fd5b50356001600160a01b0316610ba4565b610224610d03565b6101a6600480360360208110156102ec57600080fd5b50356001600160a01b0316610d27565b6101a66004803603606081101561031257600080fd5b5080359060208101359060400135610e6a565b6101a6610fdd565b610335611143565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101dc611152565b610224611167565b6101dc6004803603604081101561038157600080fd5b506001600160a01b03813516906020013561118b565b6101dc61123c565b6102246115cc565b6102246115db565b6101a6600480360360208110156103c557600080fd5b50356001600160a01b03166115ef565b6101dc61175a565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561042b57600080fd5b505afa15801561043f573d6000803e3d6000fd5b505050506040513d602081101561045557600080fd5b50516000906001600160a01b031633146105025760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50509250505060405180910390fd5b5060068054911515600160a81b027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909216919091179055565b81600082156105505761054d61123c565b90505b60408051632770a7eb60e21b81523360048201526024810186905290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639dc29fac91604480830192600092919082900301818387803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b50505050610670817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a8248768856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561063e57600080fd5b505afa158015610652573d6000803e3d6000fd5b505050506040513d602081101561066857600080fd5b505190611865565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d602081101561070957600080fd5b50518211156107495760405162461bcd60e51b8152600401808060200182810382526025815260200180611eb86025913960400191505060405180910390fd5b61077d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686846118bf565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d602081101561080a57600080fd5b5051905090565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b50516000906001600160a01b031633146108fc5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116610958576040805162461bcd60e51b815260206004820152601e60248201527f5a65726f20616464726573733a205374616b696e67204d69677261746f720000604482015290519081900360640190fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60076020526000908152604090205460ff1681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0e57600080fd5b505afa158015610a22573d6000803e3d6000fd5b505050506040513d6020811015610a3857600080fd5b50516000906001600160a01b03163314610aab5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116610b07576040805162461bcd60e51b815260206004820152601a60248201527f52656d6f76616c3a20496e76616c6964204465706f7369746f72000000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16610b74576040805162461bcd60e51b815260206004820152601460248201527f416c72656164792073657420746f2066616c7365000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600760205260409020805460ff19169055565b6008546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf257600080fd5b505afa158015610c06573d6000803e3d6000fd5b505050506040513d6020811015610c1c57600080fd5b50516000906001600160a01b03163314610c8f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b50600680546001600160a01b03831661010081027fffffffffffffffffffffff0000000000000000000000000000000000000000ff9092169190911790915560408051918252517f86719c518c7d99ac94b3d405d462ea876ba5cd0a978461dc9a7c9862a94858869181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b505afa158015610d89573d6000803e3d6000fd5b505050506040513d6020811015610d9f57600080fd5b50516000906001600160a01b03163314610e125760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb857600080fd5b505afa158015610ecc573d6000803e3d6000fd5b505050506040513d6020811015610ee257600080fd5b50516000906001600160a01b03163314610f555760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b5060065460ff1615610f985760405162461bcd60e51b8152600401808060200182810382526026815260200180611edd6026913960400191505060405180910390fd5b6040805160808101825284815260208101849052908101829052600060609091018190526002939093556003919091556004556005556006805460ff19166001179055565b6008546001600160a01b0316331461103c576040805162461bcd60e51b815260206004820152600c60248201527f4e6f7420417070726f7665640000000000000000000000000000000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d60208110156110d557600080fd5b5051905061110d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836118bf565b6040805182815290517fd7f018599941af3461d8966451e4e99a0dbfe6499fcc81848e2c5ea92a2db4d49181900360200190a150565b60025460035460045460055484565b6004546000906111629042611a3e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600654600090600160a81b900460ff166111ed573360009081526007602052604090205460ff166111ed5760405162461bcd60e51b8152600401808060200182810382526041815260200180611e776041913960600191505060405180910390fd5b6111f561123c565b5061122b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611a80565b6112358383611c08565b9392505050565b60065460009060ff16151560011461129b576040805162461bcd60e51b815260206004820152601560248201527f45706f6368206e6f7420496e697469616c697a65640000000000000000000000604482015290519081900360640190fd5b600042600280015411611162577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663058ecdb46002600301546002600101546040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b15801561132057600080fd5b505af1158015611334573d6000803e3d6000fd5b505050506040513d602081101561134a57600080fd5b505060025460045461135b91611865565b60045560038054600101905560065461010090046001600160a01b03161561146457600660019054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113cd57600080fd5b505af11580156113e1573d6000803e3d6000fd5b50505050600660019054906101000a90046001600160a01b03166001600160a01b031663e7187e8a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561143557600080fd5b505af1158015611449573d6000803e3d6000fd5b505050506040513d602081101561145f57600080fd5b505190505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156114d357600080fd5b505afa1580156114e7573d6000803e3d6000fd5b505050506040513d60208110156114fd57600080fd5b505160408051639358928b60e01b815290519192506000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639358928b916004808301926020929190829003018186803b15801561156557600080fd5b505afa158015611579573d6000803e3d6000fd5b505050506040513d602081101561158f57600080fd5b5051905061159d8184611865565b82116115ad5760006005556115c5565b6115c1836115bb8484611a3e565b90611a3e565b6005555b5050905090565b6001546001600160a01b031681565b60065461010090046001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561163d57600080fd5b505afa158015611651573d6000803e3d6000fd5b505050506040513d602081101561166757600080fd5b50516000906001600160a01b031633146116da5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116611736576040805162461bcd60e51b815260206004820152601860248201527f5a65726f20616464726573733a205f6465706f7369746f720000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a82487687f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e457600080fd5b505afa1580156117f8573d6000803e3d6000fd5b505050506040513d602081101561180e57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252516024808301926020929190829003018186803b1580156107e057600080fd5b600082820183811015611235576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106119515780518252601f199092019160209182019101611932565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119b3576040519150601f19603f3d011682016040523d82523d6000602084013e6119b8565b606091505b50915091508180156119e65750805115806119e657508080602001905160208110156119e357600080fd5b50515b611a37576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b600061123583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ddf565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17815292518251600094606094938a169392918291908083835b60208310611b1a5780518252601f199092019160209182019101611afb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b7c576040519150601f19603f3d011682016040523d82523d6000602084013e611b81565b606091505b5091509150818015611baf575080511580611baf5750808060200190516020811015611bac57600080fd5b50515b611c00576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f19847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366a5236c866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c9e57600080fd5b505afa158015611cb2573d6000803e3d6000fd5b505050506040513d6020811015611cc857600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039093166004840152602483019190915251604480830192600092919082900301818387803b158015611d3057600080fd5b505af1158015611d44573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366a5236c836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611dac57600080fd5b505afa158015611dc0573d6000803e3d6000fd5b505050506040513d6020811015611dd657600080fd5b50519392505050565b60008184841115611e6e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e33578181015183820152602001611e1b565b50505050905090810190601f168015611e605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45787465726e616c205374616b696e67206973206e6f7420616c6c6f776564202d204f6e6c7920617070726f766564206465706f7369746f7220616c6c6f776564496e73756666696369656e742050616e612062616c616e636520696e20636f6e747261637443616e6e6f7420496e697469616c697a652065706f6368206d756c7469706c652074696d6573a164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101825760003560e01c80638d453dec116100d8578063adc9772e1161008c578063bfe1092811610066578063bfe10928146103a7578063d7b07d30146103af578063f377e7cf146103d557610182565b8063adc9772e1461036b578063af14052c14610397578063bf7e214f1461039f57610182565b8063900cf0cf116100bd578063900cf0cf1461032d5780639483c1d71461035b5780639fef32cc1461036357610182565b80638d453dec146102fc5780638fd3ab801461032557610182565b806345d15b091161013a57806375619ab51161011457806375619ab5146102a857806377e93ca8146102ce5780637a9e5e4b146102d657610182565b806345d15b09146102405780634c11ac931461027a57806353be7d7a146102a057610182565b80632986c0e51161016b5780632986c0e5146101ee5780632db3558f146101f6578063401e52b91461021c57610182565b80631304cada1461018757806321d0af34146101a8575b600080fd5b6101a66004803603602081101561019d57600080fd5b503515156103dd565b005b6101dc600480360360608110156101be57600080fd5b506001600160a01b038135169060208101359060400135151561053c565b60408051918252519081900360200190f35b6101dc610785565b6101a66004803603602081101561020c57600080fd5b50356001600160a01b0316610811565b610224610987565b604080516001600160a01b039092168252519081900360200190f35b6102666004803603602081101561025657600080fd5b50356001600160a01b03166109ab565b604080519115158252519081900360200190f35b6101a66004803603602081101561029057600080fd5b50356001600160a01b03166109c0565b610224610b95565b6101a6600480360360208110156102be57600080fd5b50356001600160a01b0316610ba4565b610224610d03565b6101a6600480360360208110156102ec57600080fd5b50356001600160a01b0316610d27565b6101a66004803603606081101561031257600080fd5b5080359060208101359060400135610e6a565b6101a6610fdd565b610335611143565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101dc611152565b610224611167565b6101dc6004803603604081101561038157600080fd5b506001600160a01b03813516906020013561118b565b6101dc61123c565b6102246115cc565b6102246115db565b6101a6600480360360208110156103c557600080fd5b50356001600160a01b03166115ef565b6101dc61175a565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561042b57600080fd5b505afa15801561043f573d6000803e3d6000fd5b505050506040513d602081101561045557600080fd5b50516000906001600160a01b031633146105025760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50509250505060405180910390fd5b5060068054911515600160a81b027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909216919091179055565b81600082156105505761054d61123c565b90505b60408051632770a7eb60e21b81523360048201526024810186905290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639dc29fac91604480830192600092919082900301818387803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b50505050610670817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a8248768856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561063e57600080fd5b505afa158015610652573d6000803e3d6000fd5b505050506040513d602081101561066857600080fd5b505190611865565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d602081101561070957600080fd5b50518211156107495760405162461bcd60e51b8152600401808060200182810382526025815260200180611eb86025913960400191505060405180910390fd5b61077d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686846118bf565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d602081101561080a57600080fd5b5051905090565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b50516000906001600160a01b031633146108fc5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116610958576040805162461bcd60e51b815260206004820152601e60248201527f5a65726f20616464726573733a205374616b696e67204d69677261746f720000604482015290519081900360640190fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60076020526000908152604090205460ff1681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0e57600080fd5b505afa158015610a22573d6000803e3d6000fd5b505050506040513d6020811015610a3857600080fd5b50516000906001600160a01b03163314610aab5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116610b07576040805162461bcd60e51b815260206004820152601a60248201527f52656d6f76616c3a20496e76616c6964204465706f7369746f72000000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16610b74576040805162461bcd60e51b815260206004820152601460248201527f416c72656164792073657420746f2066616c7365000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600760205260409020805460ff19169055565b6008546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf257600080fd5b505afa158015610c06573d6000803e3d6000fd5b505050506040513d6020811015610c1c57600080fd5b50516000906001600160a01b03163314610c8f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b50600680546001600160a01b03831661010081027fffffffffffffffffffffff0000000000000000000000000000000000000000ff9092169190911790915560408051918252517f86719c518c7d99ac94b3d405d462ea876ba5cd0a978461dc9a7c9862a94858869181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b505afa158015610d89573d6000803e3d6000fd5b505050506040513d6020811015610d9f57600080fd5b50516000906001600160a01b03163314610e125760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb857600080fd5b505afa158015610ecc573d6000803e3d6000fd5b505050506040513d6020811015610ee257600080fd5b50516000906001600160a01b03163314610f555760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b5060065460ff1615610f985760405162461bcd60e51b8152600401808060200182810382526026815260200180611edd6026913960400191505060405180910390fd5b6040805160808101825284815260208101849052908101829052600060609091018190526002939093556003919091556004556005556006805460ff19166001179055565b6008546001600160a01b0316331461103c576040805162461bcd60e51b815260206004820152600c60248201527f4e6f7420417070726f7665640000000000000000000000000000000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d60208110156110d557600080fd5b5051905061110d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836118bf565b6040805182815290517fd7f018599941af3461d8966451e4e99a0dbfe6499fcc81848e2c5ea92a2db4d49181900360200190a150565b60025460035460045460055484565b6004546000906111629042611a3e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600654600090600160a81b900460ff166111ed573360009081526007602052604090205460ff166111ed5760405162461bcd60e51b8152600401808060200182810382526041815260200180611e776041913960600191505060405180910390fd5b6111f561123c565b5061122b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611a80565b6112358383611c08565b9392505050565b60065460009060ff16151560011461129b576040805162461bcd60e51b815260206004820152601560248201527f45706f6368206e6f7420496e697469616c697a65640000000000000000000000604482015290519081900360640190fd5b600042600280015411611162577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663058ecdb46002600301546002600101546040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b15801561132057600080fd5b505af1158015611334573d6000803e3d6000fd5b505050506040513d602081101561134a57600080fd5b505060025460045461135b91611865565b60045560038054600101905560065461010090046001600160a01b03161561146457600660019054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113cd57600080fd5b505af11580156113e1573d6000803e3d6000fd5b50505050600660019054906101000a90046001600160a01b03166001600160a01b031663e7187e8a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561143557600080fd5b505af1158015611449573d6000803e3d6000fd5b505050506040513d602081101561145f57600080fd5b505190505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156114d357600080fd5b505afa1580156114e7573d6000803e3d6000fd5b505050506040513d60208110156114fd57600080fd5b505160408051639358928b60e01b815290519192506000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639358928b916004808301926020929190829003018186803b15801561156557600080fd5b505afa158015611579573d6000803e3d6000fd5b505050506040513d602081101561158f57600080fd5b5051905061159d8184611865565b82116115ad5760006005556115c5565b6115c1836115bb8484611a3e565b90611a3e565b6005555b5050905090565b6001546001600160a01b031681565b60065461010090046001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561163d57600080fd5b505afa158015611651573d6000803e3d6000fd5b505050506040513d602081101561166757600080fd5b50516000906001600160a01b031633146116da5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104f35780601f106104c8576101008083540402835291602001916104f3565b506001600160a01b038116611736576040805162461bcd60e51b815260206004820152601860248201527f5a65726f20616464726573733a205f6465706f7369746f720000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a82487687f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e457600080fd5b505afa1580156117f8573d6000803e3d6000fd5b505050506040513d602081101561180e57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252516024808301926020929190829003018186803b1580156107e057600080fd5b600082820183811015611235576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106119515780518252601f199092019160209182019101611932565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119b3576040519150601f19603f3d011682016040523d82523d6000602084013e6119b8565b606091505b50915091508180156119e65750805115806119e657508080602001905160208110156119e357600080fd5b50515b611a37576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b600061123583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ddf565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17815292518251600094606094938a169392918291908083835b60208310611b1a5780518252601f199092019160209182019101611afb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b7c576040519150601f19603f3d011682016040523d82523d6000602084013e611b81565b606091505b5091509150818015611baf575080511580611baf5750808060200190516020811015611bac57600080fd5b50515b611c00576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f19847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366a5236c866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c9e57600080fd5b505afa158015611cb2573d6000803e3d6000fd5b505050506040513d6020811015611cc857600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039093166004840152602483019190915251604480830192600092919082900301818387803b158015611d3057600080fd5b505af1158015611d44573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366a5236c836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611dac57600080fd5b505afa158015611dc0573d6000803e3d6000fd5b505050506040513d6020811015611dd657600080fd5b50519392505050565b60008184841115611e6e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e33578181015183820152602001611e1b565b50505050905090810190601f168015611e605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45787465726e616c205374616b696e67206973206e6f7420616c6c6f776564202d204f6e6c7920617070726f766564206465706f7369746f7220616c6c6f776564496e73756666696369656e742050616e612062616c616e636520696e20636f6e747261637443616e6e6f7420496e697469616c697a652065706f6368206d756c7469706c652074696d6573a164736f6c6343000705000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "index()": {
        "returns": {
          "_0": "uint"
        }
      },
      "rebase()": {
        "returns": {
          "_0": "uint256"
        }
      },
      "setDistributor(address)": {
        "params": {
          "_distributor": "address"
        }
      },
      "setFirstEpoch(uint256,uint256,uint256)": {
        "params": {
          "_epochLength": "uint",
          "_firstEpochNumber": "uint",
          "_firstEpochTime": "uint"
        }
      },
      "setStakingMigrator(address)": {
        "params": {
          "_migrator": "address"
        }
      },
      "stake(address,uint256)": {
        "params": {
          "_amount": "uint",
          "_to": "address"
        },
        "returns": {
          "_0": "uint"
        }
      },
      "unstake(address,uint256,bool)": {
        "params": {
          "_amount": "uint",
          "_to": "address",
          "_trigger": "bool"
        },
        "returns": {
          "amount_": "uint"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "index()": {
        "notice": "returns the sPana index, which tracks rebase growth"
      },
      "migrate()": {
        "notice": "allow approved address to withdraw Pana"
      },
      "rebase()": {
        "notice": "trigger rebase if epoch over"
      },
      "secondsToNextEpoch()": {
        "notice": "seconds until the next epoch begins"
      },
      "setDistributor(address)": {
        "notice": "sets the contract address for LP staking"
      },
      "setFirstEpoch(uint256,uint256,uint256)": {
        "notice": "initialize first rebase parameters"
      },
      "setStakingMigrator(address)": {
        "notice": "set Staking Contract migrator"
      },
      "stake(address,uint256)": {
        "notice": "stake Pana"
      },
      "stakingSupply()": {
        "notice": "staked Karsha in terms of Pana"
      },
      "unstake(address,uint256,bool)": {
        "notice": "redeem Pana/sPana for Karsha/Pana"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 314,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 316,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPanaAuthority)2684"
      },
      {
        "astId": 5723,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "epoch",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(Epoch)5715_storage"
      },
      {
        "astId": 5725,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "firstEpochSet",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5727,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "distributor",
        "offset": 1,
        "slot": "6",
        "type": "t_contract(IDistributor)2355"
      },
      {
        "astId": 5729,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "_allowedExternalStaking",
        "offset": 21,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5733,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "approvedDepositor",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5735,
        "contract": "contracts/staking/Staking.sol:PanaStaking",
        "label": "stakingMigrator",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IDistributor)2355": {
        "encoding": "inplace",
        "label": "contract IDistributor",
        "numberOfBytes": "20"
      },
      "t_contract(IPanaAuthority)2684": {
        "encoding": "inplace",
        "label": "contract IPanaAuthority",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Epoch)5715_storage": {
        "encoding": "inplace",
        "label": "struct PanaStaking.Epoch",
        "members": [
          {
            "astId": 5708,
            "contract": "contracts/staking/Staking.sol:PanaStaking",
            "label": "length",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5710,
            "contract": "contracts/staking/Staking.sol:PanaStaking",
            "label": "number",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5712,
            "contract": "contracts/staking/Staking.sol:PanaStaking",
            "label": "end",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5714,
            "contract": "contracts/staking/Staking.sol:PanaStaking",
            "label": "distribute",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}