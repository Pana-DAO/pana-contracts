{
  "address": "0xBcc4638aD5919aAE37baA8b67951Fd77621414bE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pana",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPanaAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CreateDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "DepositForRedemption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Managed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum PanaTreasury.STATUS",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "queued",
          "type": "address"
        }
      ],
      "name": "PermissionQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum PanaTreasury.STATUS",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "Permissioned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RepayDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PANA",
      "outputs": [
        {
          "internalType": "contract IPana",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auditReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IPanaAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksNeededForQueue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bondCalculator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "send_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "depositForRedemption",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "send_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_toDisable",
          "type": "address"
        }
      ],
      "name": "disable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_calculator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_supplyController",
          "type": "address"
        }
      ],
      "name": "enable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excessReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "incurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "indexInRegistry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "manage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "nullify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onChainGovernanceTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "panaDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "permissionQueue",
      "outputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "toPermit",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "calculator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "supplyController",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timelockEnd",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "nullify",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "permissions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_calculator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_supplyController",
          "type": "address"
        }
      ],
      "name": "queueTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PanaTreasury.STATUS",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayDebtWithPANA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "repayDebtWithReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sPANA",
      "outputs": [
        {
          "internalType": "contract IsPana",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPanaAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseValue",
          "type": "uint256"
        }
      ],
      "name": "setBaseValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "setDebtLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supplyController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "tokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb41a228d880ce9a416d65b78d90e80485ce596a6453260e718f0129c73a50fec",
  "receipt": {
    "to": null,
    "from": "0x2d494Cb0a923009C471B9512571048560a44556A",
    "contractAddress": "0xBcc4638aD5919aAE37baA8b67951Fd77621414bE",
    "transactionIndex": 0,
    "gasUsed": "66724043",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000008000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000100000000000000010000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000",
    "blockHash": "0x2c1edf8b00738dab9ffebbd231748817b56722a06b42953b35629518812d41bb",
    "transactionHash": "0xb41a228d880ce9a416d65b78d90e80485ce596a6453260e718f0129c73a50fec",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13417073,
        "transactionHash": "0xb41a228d880ce9a416d65b78d90e80485ce596a6453260e718f0129c73a50fec",
        "address": "0xBcc4638aD5919aAE37baA8b67951Fd77621414bE",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x000000000000000000000000afdc0d2247b20d37b905ccbfb0650fcc606d11eb"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2c1edf8b00738dab9ffebbd231748817b56722a06b42953b35629518812d41bb"
      }
    ],
    "blockNumber": 13417073,
    "cumulativeGasUsed": "30995842",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x29f55058bE3104EdE589fA51ff74B2F07eBb46F6",
    0,
    "0xafdc0D2247B20D37b905ccbFB0650FCc606D11eB"
  ],
  "solcInputHash": "26874fd6f735c682576cd980ced0d683",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pana\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPanaAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DepositForRedemption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Managed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queued\",\"type\":\"address\"}],\"name\":\"PermissionQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"Permissioned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RepayDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PANA\",\"outputs\":[{\"internalType\":\"contract IPana\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IPanaAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksNeededForQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondCalculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"depositForRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_toDisable\",\"type\":\"address\"}],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_supplyController\",\"type\":\"address\"}],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"incurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"indexInRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"manage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"nullify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onChainGovernanceTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panaDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permissionQueue\",\"outputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"toPermit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"calculator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyController\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelockEnd\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"nullify\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permissions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_supplyController\",\"type\":\"address\"}],\"name\":\"queueTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PanaTreasury.STATUS\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayDebtWithPANA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"repayDebtWithReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sPANA\",\"outputs\":[{\"internalType\":\"contract IsPana\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPanaAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"}],\"name\":\"setBaseValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setDebtLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"baseSupply()\":{\"details\":\"use this any time you need to query supply\",\"returns\":{\"_0\":\"uint256\"}},\"deposit(uint256,address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_profit\":\"uint256\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint256\"}},\"depositForRedemption(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint256\"}},\"disable(uint8,address)\":{\"params\":{\"_status\":\"STATUS\",\"_toDisable\":\"address\"}},\"enable(uint8,address,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_status\":\"STATUS\"}},\"excessReserves()\":{\"returns\":{\"_0\":\"uint\"}},\"execute(uint256)\":{\"params\":{\"_index\":\"uint256\"}},\"incurDebt(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"indexInRegistry(address,uint8)\":{\"returns\":{\"_0\":\"(bool, uint256)\"}},\"manage(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_recipient\":\"address\"}},\"nullify(uint256)\":{\"params\":{\"_index\":\"uint256\"}},\"queueTimelock(uint8,address,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_status\":\"STATUS\"}},\"repayDebtWithPANA(uint256)\":{\"params\":{\"_amount\":\"uint256\"}},\"repayDebtWithReserve(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"setBaseValue(uint256)\":{\"params\":{\"_baseValue\":\"base value of PANA expressed in terms of X PANA per 1 reserve token (DAI), 9 decimals \"}},\"setDebtLimit(address,uint256)\":{\"params\":{\"_address\":\"address\",\"_limit\":\"uint256\"}},\"tokenValue(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint256\"}},\"withdraw(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"auditReserves()\":{\"notice\":\"takes inventory of all tracked assetsalways consolidate to recognized reserves before audit\"},\"baseSupply()\":{\"notice\":\"returns supply metric that cannot be manipulated by debt\"},\"deposit(uint256,address,uint256)\":{\"notice\":\"allow approved address to deposit an asset for PANA\"},\"depositForRedemption(uint256,address)\":{\"notice\":\"allow approved address to deposit reserve token for available PANA. No new PANA is minted.\"},\"disable(uint8,address)\":{\"notice\":\"disable permission from address\"},\"disableTimelock()\":{\"notice\":\"disables timelocked functions\"},\"enable(uint8,address,address,address)\":{\"notice\":\"enable permission from queue\"},\"excessReserves()\":{\"notice\":\"returns excess reserves not backing tokens\"},\"execute(uint256)\":{\"notice\":\"enable queued permission\"},\"incurDebt(uint256,address)\":{\"notice\":\"allow approved address to borrow reserves\"},\"indexInRegistry(address,uint8)\":{\"notice\":\"check if registry contains address\"},\"initialize()\":{\"notice\":\"enables timelocks after initilization\"},\"manage(address,uint256)\":{\"notice\":\"allow approved address to withdraw assets\"},\"mint(address,uint256)\":{\"notice\":\"mint new PANA using excess reserves\"},\"nullify(uint256)\":{\"notice\":\"cancel timelocked action\"},\"queueTimelock(uint8,address,address,address)\":{\"notice\":\"queue address to receive permission\"},\"repayDebtWithPANA(uint256)\":{\"notice\":\"allow approved address to repay borrowed reserves with PANA\"},\"repayDebtWithReserve(uint256,address)\":{\"notice\":\"allow approved address to repay borrowed reserves with reserves\"},\"setBaseValue(uint256)\":{\"notice\":\"sets PANA token base value\"},\"setDebtLimit(address,uint256)\":{\"notice\":\"set max debt for address\"},\"tokenValue(address,uint256)\":{\"notice\":\"returns PANA valuation of asset\"},\"withdraw(uint256,address)\":{\"notice\":\"allow approved address to burn PANA for reserves\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/treasury/Treasury.sol\":\"PanaTreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/access/PanaAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IPanaAuthority.sol\\\";\\n\\nabstract contract PanaAccessControlled {\\n\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IPanaAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IPanaAuthority public authority;\\n\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IPanaAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n    \\n\\n    /* ========== MODIFIERS ========== */\\n    \\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    /* ========== GOV ONLY ========== */\\n    \\n    function setAuthority(IPanaAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x034e5499a57b5a80ba7315a07b54a800876e4e9143ec38855118dc2ff0af9311\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/IBondingCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IBondingCalculator {\\n    function valuation( address pair_, uint amount_, uint256 _baseValue ) external view returns ( uint _value );\\n}\",\"keccak256\":\"0x09addbf72bc50d0614d505ca6902735ed9a5c396eac9fd857e45329c6a1c55dd\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa142440b0e1c51ece24b6d074ac883b34e1f33a2472773eeaaf4871875904d09\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Metadata is IERC20 {\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x6dfa58ba4a241b2201f3ecb3ba26345ce4dd66f0a553f18b2a284341f5aacd72\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IPana.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IPana is IERC20 {\\n  event DistributionConcluded(uint256 totalDistributed);\\n\\n  function mint(address account_, uint256 amount_) external;\\n\\n  function burn(uint256 amount) external;\\n\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\",\"keccak256\":\"0x6d091828bfd47a3a7d13391b23381229761cfc67431c2d9df3a6ce5fde9013e4\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IPanaAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IPanaAuthority {\\n    /* ========== EVENTS ========== */\\n    \\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event DistributionVaultPushed(address indexed from, address indexed to, bool _effectiveImmediately); \\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n    event DistributionVaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n    \\n    function governor() external view returns (address);\\n    function guardian() external view returns (address);\\n    function policy() external view returns (address);\\n    function vault() external view returns (address);\\n    function distributionVault() external view returns (address);\\n}\",\"keccak256\":\"0xc49dc603c39b5cbd2e18e02176ef489bd89dde552495236e9798ae49a9f2e875\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ISupplyContoller.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface ISupplyContoller {\\n        \\n    /* ========== EVENTS ========== */\\n    event SetSupplyControlParams(uint256 totalSupply, uint256 old_lossRatio, uint256 old_cf, uint256 old_cc, \\n                            uint256 old_mslp, uint256 lossRatio, uint256 cf, uint256 cc, \\n                                uint256 mslp);\\n    event Burnt(uint256 totalSupply, uint256 panaInPool, uint256 slp, uint256 panaResidue, uint256 tokenResidue);\\n    event Supplied(uint256 totalSupply, uint256 panaInPool, uint256 slp, \\n                    uint256 panaSupplied, uint256 panaResidue, uint256 tokenResidue);\\n    \\n    function supplyControlEnabled() external view returns (bool);\\n\\n    function paramsSet() external view returns (bool);\\n\\n    function setSupplyControlParams(uint256 _lossRatio, uint256 _cf, uint256 _cc, uint256 _mslp) external;\\n\\n    function enableSupplyControl() external;\\n\\n    function disableSupplyControl() external;\\n\\n    function getSupplyControlAmount() external view returns (uint256 _pana, uint256 _slp, bool _burn);\\n\\n    function burn(uint256 _pana, uint256 _slp) external;\\n\\n    function add(uint256 _pana) external;\\n}\",\"keccak256\":\"0x4139a8aa4829ed144ad1932095f1fb2da692a72e955eb8858083b54176c22556\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function depositForRedemption(uint _amount, address _token) external returns (uint256 send_);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x870d605306b86169c8de0e16d6cb0030e9e732631aa0896c2dca798670f48fc0\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IsPana.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IsPana is IERC20 {\\n    function rebase( uint256 panaProfit_, uint epoch_) external returns (uint256);\\n\\n    function circulatingSupply() external view returns (uint256);\\n\\n    function gonsForBalance( uint amount ) external view returns ( uint );\\n\\n    function balanceForGons( uint gons ) external view returns ( uint );\\n\\n    function index() external view returns ( uint );\\n\\n    function toKARSHA(uint amount) external view returns (uint);\\n\\n    function fromKARSHA(uint amount) external view returns (uint);\\n\\n     function changeDebt(\\n        uint256 amount,\\n        address debtor,\\n        bool add\\n    ) external;\\n\\n    function debtBalances(address _address) external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0x07870b9160b6049e4d8ba59440902e1d45e558e935b02c9af0d31e9bfd75f970\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\",\"keccak256\":\"0xbdd4f99088de7c23383b043055646de013b1312166a9bfa05e3995cdcf7ae022\",\"license\":\"AGPL-3.0-only\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint c) {\\n        if (a > 3) {\\n            c = a;\\n            uint b = add( div( a, 2), 1 );\\n            while (b < c) {\\n                c = b;\\n                b = div( add( div( a, b ), b), 2 );\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x45cfc2aa9d85df2add98d4e899d834c646e8ce7001b00ead65f07dbefbcebeef\",\"license\":\"AGPL-3.0\"},\"contracts/treasury/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\nimport \\\"../libraries/SafeMath.sol\\\";\\nimport \\\"../libraries/SafeERC20.sol\\\";\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/IPana.sol\\\";\\nimport \\\"../interfaces/IsPana.sol\\\";\\nimport \\\"../interfaces/IBondingCalculator.sol\\\";\\nimport \\\"../interfaces/ITreasury.sol\\\";\\nimport \\\"../interfaces/ISupplyContoller.sol\\\";\\n\\nimport \\\"../access/PanaAccessControlled.sol\\\";\\n\\ncontract PanaTreasury is PanaAccessControlled, ITreasury {\\n    /* ========== DEPENDENCIES ========== */\\n\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /* ========== EVENTS ========== */\\n\\n    event Deposit(address indexed token, uint256 amount, uint256 value);\\n    event DepositForRedemption(address indexed token, uint256 amount, uint256 value);\\n    event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n    event CreateDebt(address indexed debtor, address indexed token, uint256 amount, uint256 value);\\n    event RepayDebt(address indexed debtor, address indexed token, uint256 amount, uint256 value);\\n    event Managed(address indexed token, uint256 amount);\\n    event ReservesAudited(uint256 indexed totalReserves);\\n    event Minted(address indexed caller, address indexed recipient, uint256 amount);\\n    event PermissionQueued(STATUS indexed status, address queued);\\n    event Permissioned(address addr, STATUS indexed status, bool result);\\n\\n    /* ========== DATA STRUCTURES ========== */\\n\\n    enum STATUS {\\n        RESERVEDEPOSITOR,\\n        RESERVESPENDER,\\n        RESERVETOKEN,\\n        RESERVEMANAGER,\\n        LIQUIDITYDEPOSITOR,\\n        LIQUIDITYTOKEN,\\n        LIQUIDITYMANAGER,\\n        RESERVEDEBTOR,\\n        REWARDMANAGER,\\n        SPANA,\\n        PANADEBTOR,\\n        PANAREDEEMER\\n    }\\n\\n    struct Queue {\\n        STATUS managing;\\n        address toPermit;\\n        address calculator;\\n        address supplyController;\\n        uint256 timelockEnd;\\n        bool nullify;\\n        bool executed;\\n    }\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IPana public immutable PANA;\\n    IsPana public sPANA;\\n\\n    mapping(STATUS => address[]) public registry;\\n    mapping(STATUS => mapping(address => bool)) public permissions;\\n    mapping(address => address) public bondCalculator;\\n    mapping(address => address) public supplyController;\\n\\n    mapping(address => uint256) public debtLimit;\\n\\n    uint256 public totalReserves;\\n    uint256 public totalDebt;\\n    uint256 public panaDebt;\\n\\n    Queue[] public permissionQueue;\\n    uint256 public immutable blocksNeededForQueue;\\n\\n    bool public timelockEnabled;\\n    bool public initialized;\\n\\n    uint256 public onChainGovernanceTimelock;\\n\\n    // A base (intrinsic) value of PANA token.\\n    // Expressed in terms of X PANA per 1 token (i.e. 100.0 = 100 PANA per 1 DAI = 0.01 DAI per 1 PANA).\\n    // Base value specified to 9 precision digits (9 digits caps the base price of PANA to 1bln DAI at max)\\n    uint256 public baseValue;\\n\\n    string internal notAccepted = \\\"Treasury: not accepted\\\";\\n    string internal notApproved = \\\"Treasury: not approved\\\";\\n    string internal invalidToken = \\\"Treasury: invalid token\\\";\\n    string internal insufficientReserves = \\\"Treasury: insufficient reserves\\\";\\n\\n    /* ========== CONSTRUCTOR ========== */\\n\\n    constructor(\\n        address _pana,\\n        uint256 _timelock,\\n        address _authority\\n    ) PanaAccessControlled(IPanaAuthority(_authority)) {\\n        require(_pana != address(0), \\\"Zero address: PANA\\\");\\n        PANA = IPana(_pana);\\n\\n        timelockEnabled = false;\\n        initialized = false;\\n        blocksNeededForQueue = _timelock;\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    /**\\n     * @notice allow approved address to deposit an asset for PANA\\n     * @param _amount uint256\\n     * @param _token address\\n     * @param _profit uint256\\n     * @return send_ uint256\\n     */\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external override returns (uint256 send_) {\\n        if (permissions[STATUS.RESERVETOKEN][_token]) {\\n            require(permissions[STATUS.RESERVEDEPOSITOR][msg.sender], notApproved);\\n        } else if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            require(permissions[STATUS.LIQUIDITYDEPOSITOR][msg.sender], notApproved);\\n        } else {\\n            revert(invalidToken);\\n        }\\n\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n        uint256 value = tokenValue(_token, _amount);\\n        // mint PANA needed and store amount of rewards for distribution\\n        send_ = value.sub(_profit);\\n        PANA.mint(msg.sender, send_);\\n\\n        totalReserves = totalReserves.add(value);\\n\\n        emit Deposit(_token, _amount, value);\\n\\n        if(permissions[STATUS.LIQUIDITYTOKEN][_token] \\n            && supplyController[_token] != address(0)\\n                && ISupplyContoller(supplyController[_token]).supplyControlEnabled()\\n                    && ISupplyContoller(supplyController[_token]).paramsSet()) {\\n            (uint256 pana, uint256 slp, bool burn) = ISupplyContoller(supplyController[_token]).getSupplyControlAmount();\\n\\n            if(pana > 0) {\\n                if(burn && (IERC20(_token).balanceOf(address(this)) >= slp)) {\\n                    // Burn PANA, send SLPs to supplyController\\n                    IERC20(_token).safeTransfer(supplyController[_token], slp);\\n                    ISupplyContoller(supplyController[_token]).burn(pana, slp);\\n                } else if(IERC20(PANA).balanceOf(address(this)) >= pana) {\\n                    // Add PANA, send PANA to supplyController\\n                    IERC20(PANA).safeTransfer(supplyController[_token], pana);\\n                    ISupplyContoller(supplyController[_token]).add(pana);\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice allow approved address to deposit reserve token for available PANA. No new PANA is minted.\\n     * @param _amount uint256\\n     * @param _token address\\n     * @return send_ uint256\\n     */\\n    function depositForRedemption(uint _amount, address _token) external override returns (uint256 send_) {\\n        require(permissions[STATUS.RESERVETOKEN][_token], notAccepted);\\n        require(permissions[STATUS.PANAREDEEMER][msg.sender], notApproved);\\n\\n        // redemption is always calculated as 1:100\\n        send_ = _amount.mul(1e11).mul(10**IERC20Metadata(address(PANA)).decimals()).div(10**9).div(10**IERC20Metadata(_token).decimals());\\n        require(send_ <= PANA.balanceOf(address(this)), \\\"Not enough PANA reserves\\\");\\n       \\n        // reserves increased according to the current intrinsic value\\n        totalReserves = totalReserves.add(tokenValue(_token, _amount));\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n        IERC20(PANA).safeTransfer(msg.sender, send_);\\n\\n        emit DepositForRedemption(_token, _amount, send_);\\n    }\\n\\n    /**\\n     * @notice allow approved address to burn PANA for reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    function withdraw(uint256 _amount, address _token) external override {\\n        require(permissions[STATUS.RESERVETOKEN][_token], notAccepted); // Only reserves can be used for redemptions\\n        require(permissions[STATUS.RESERVESPENDER][msg.sender], notApproved);\\n\\n        uint256 value = tokenValue(_token, _amount);\\n        PANA.burnFrom(msg.sender, value);\\n\\n        totalReserves = totalReserves.sub(value);\\n\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n        emit Withdrawal(_token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to withdraw assets\\n     * @param _token address\\n     * @param _amount uint256\\n     */\\n    function manage(address _token, uint256 _amount) external override {\\n        if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            require(permissions[STATUS.LIQUIDITYMANAGER][msg.sender], notApproved);\\n        } else {\\n            require(permissions[STATUS.RESERVEMANAGER][msg.sender], notApproved);\\n        }\\n        if (permissions[STATUS.RESERVETOKEN][_token] || permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            uint256 value = tokenValue(_token, _amount);\\n            require(value <= excessReserves(), insufficientReserves);\\n            totalReserves = totalReserves.sub(value);\\n        }\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n        emit Managed(_token, _amount);\\n    }\\n\\n    /**\\n     * @notice mint new PANA using excess reserves\\n     * @param _recipient address\\n     * @param _amount uint256\\n     */\\n    function mint(address _recipient, uint256 _amount) external override {\\n        require(permissions[STATUS.REWARDMANAGER][msg.sender], notApproved);\\n        updateReserves();\\n        require(_amount <= excessReserves(), insufficientReserves);\\n        PANA.mint(_recipient, _amount);\\n        emit Minted(msg.sender, _recipient, _amount);\\n    }\\n\\n    /**\\n     * DEBT: The debt functions allow approved addresses to borrow treasury assets\\n     * or PANA from the treasury, using sPANA as collateral. This might allow an\\n     * sPANA holder to provide PANA liquidity without taking on the opportunity cost\\n     * of unstaking, or alter their backing without imposing risk onto the treasury.\\n     * Many of these use cases are yet to be defined, but they appear promising.\\n     * However, we urge the community to think critically and move slowly upon\\n     * proposals to acquire these permissions.\\n     */\\n\\n    /**\\n     * @notice allow approved address to borrow reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    function incurDebt(uint256 _amount, address _token) external override {\\n        uint256 value;\\n        if (_token == address(PANA)) {\\n            require(permissions[STATUS.PANADEBTOR][msg.sender], notApproved);\\n            value = _amount;\\n        } else {\\n            require(permissions[STATUS.RESERVEDEBTOR][msg.sender], notApproved);\\n            require(permissions[STATUS.RESERVETOKEN][_token], notAccepted);\\n            value = tokenValue(_token, _amount);\\n        }\\n        require(value != 0, invalidToken);\\n\\n        sPANA.changeDebt(value, msg.sender, true);\\n        require(sPANA.debtBalances(msg.sender) <= debtLimit[msg.sender], \\\"Treasury: exceeds limit\\\");\\n        totalDebt = totalDebt.add(value);\\n\\n        if (_token == address(PANA)) {\\n            PANA.mint(msg.sender, value);\\n            panaDebt = panaDebt.add(value);\\n        } else {\\n            totalReserves = totalReserves.sub(value);\\n            IERC20(_token).safeTransfer(msg.sender, _amount);\\n        }\\n        emit CreateDebt(msg.sender, _token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to repay borrowed reserves with reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    function repayDebtWithReserve(uint256 _amount, address _token) external override {\\n        require(permissions[STATUS.RESERVEDEBTOR][msg.sender], notApproved);\\n        require(permissions[STATUS.RESERVETOKEN][_token], notAccepted);\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n        uint256 value = tokenValue(_token, _amount);\\n        sPANA.changeDebt(value, msg.sender, false);\\n        totalDebt = totalDebt.sub(value);\\n        totalReserves = totalReserves.add(value);\\n        emit RepayDebt(msg.sender, _token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to repay borrowed reserves with PANA\\n     * @param _amount uint256\\n     */\\n    function repayDebtWithPANA(uint256 _amount) external {\\n        require(permissions[STATUS.RESERVEDEBTOR][msg.sender] || permissions[STATUS.PANADEBTOR][msg.sender], notApproved);\\n        PANA.burnFrom(msg.sender, _amount);\\n        sPANA.changeDebt(_amount, msg.sender, false);\\n        totalDebt = totalDebt.sub(_amount);\\n        panaDebt = panaDebt.sub(_amount);\\n        emit RepayDebt(msg.sender, address(PANA), _amount, _amount);\\n    }\\n\\n    /* ========== MANAGERIAL FUNCTIONS ========== */\\n\\n    /**\\n     * @notice takes inventory of all tracked assets\\n     * @notice always consolidate to recognized reserves before audit\\n     */\\n    function auditReserves() external onlyGovernor {\\n        uint256 reserves;\\n        address[] memory reserveToken = registry[STATUS.RESERVETOKEN];\\n        for (uint256 i = 0; i < reserveToken.length; i++) {\\n            if (permissions[STATUS.RESERVETOKEN][reserveToken[i]]) {\\n                reserves = reserves.add(tokenValue(reserveToken[i], IERC20(reserveToken[i]).balanceOf(address(this))));\\n            }\\n        }\\n        address[] memory liquidityToken = registry[STATUS.LIQUIDITYTOKEN];\\n        for (uint256 i = 0; i < liquidityToken.length; i++) {\\n            if (permissions[STATUS.LIQUIDITYTOKEN][liquidityToken[i]]) {\\n                reserves = reserves.add(tokenValue(liquidityToken[i], IERC20(liquidityToken[i]).balanceOf(address(this))));\\n            }\\n        }\\n        totalReserves = reserves;\\n        emit ReservesAudited(reserves);\\n    }\\n\\n    /**\\n     * @notice takes inventory of all tracked assets\\n     * @notice always consolidate to recognized reserves before audit\\n     */\\n    function updateReserves() internal {\\n        uint256 reserves;\\n        address[] memory reserveToken = registry[STATUS.RESERVETOKEN];\\n        for (uint256 i = 0; i < reserveToken.length; i++) {\\n            if (permissions[STATUS.RESERVETOKEN][reserveToken[i]]) {\\n                reserves = reserves.add(tokenValue(reserveToken[i], IERC20(reserveToken[i]).balanceOf(address(this))));\\n            }\\n        }\\n        address[] memory liquidityToken = registry[STATUS.LIQUIDITYTOKEN];\\n        for (uint256 i = 0; i < liquidityToken.length; i++) {\\n            if (permissions[STATUS.LIQUIDITYTOKEN][liquidityToken[i]]) {\\n                reserves = reserves.add(tokenValue(liquidityToken[i], IERC20(liquidityToken[i]).balanceOf(address(this))));\\n            }\\n        }\\n        totalReserves = reserves;\\n        emit ReservesAudited(reserves);\\n    }\\n\\n    /**\\n     * @notice set max debt for address\\n     * @param _address address\\n     * @param _limit uint256\\n     */\\n    function setDebtLimit(address _address, uint256 _limit) external onlyGovernor {\\n        debtLimit[_address] = _limit;\\n    }\\n\\n    /**\\n     * @notice enable permission from queue\\n     * @param _status STATUS\\n     * @param _address address\\n     * @param _calculator address\\n     */\\n    function enable(\\n        STATUS _status,\\n        address _address,\\n        address _calculator,\\n        address _supplyController\\n    ) external onlyGovernor {\\n        require(timelockEnabled == false, \\\"Use queueTimelock\\\");\\n        if (_status == STATUS.SPANA) {\\n            sPANA = IsPana(_address);\\n        } else {\\n            permissions[_status][_address] = true;\\n\\n            if (_status == STATUS.LIQUIDITYTOKEN) {\\n                bondCalculator[_address] = _calculator;\\n                supplyController[_address] = _supplyController;\\n            }\\n\\n            (bool registered, ) = indexInRegistry(_address, _status);\\n            if (!registered) {\\n                registry[_status].push(_address);\\n            }\\n        }\\n        emit Permissioned(_address, _status, true);\\n    }\\n\\n    /**\\n     *  @notice disable permission from address\\n     *  @param _status STATUS\\n     *  @param _toDisable address\\n     */\\n    function disable(STATUS _status, address _toDisable) external {\\n        require(msg.sender == authority.governor() || msg.sender == authority.guardian(), \\\"Only governor or guardian\\\");\\n        permissions[_status][_toDisable] = false;\\n        emit Permissioned(_toDisable, _status, false);\\n    }\\n\\n    /**\\n     * @notice check if registry contains address\\n     * @return (bool, uint256)\\n     */\\n    function indexInRegistry(address _address, STATUS _status) public view returns (bool, uint256) {\\n        address[] memory entries = registry[_status];\\n        for (uint256 i = 0; i < entries.length; i++) {\\n            if (_address == entries[i]) {\\n                return (true, i);\\n            }\\n        }\\n        return (false, 0);\\n    }\\n\\n    /* ========== TIMELOCKED FUNCTIONS ========== */\\n\\n    // functions are used prior to enabling on-chain governance\\n\\n    /**\\n     * @notice queue address to receive permission\\n     * @param _status STATUS\\n     * @param _address address\\n     * @param _calculator address\\n     */\\n    function queueTimelock(\\n        STATUS _status,\\n        address _address,\\n        address _calculator,\\n        address _supplyController\\n    ) external onlyGovernor {\\n        require(_address != address(0));\\n        require(timelockEnabled == true, \\\"Timelock is disabled, use enable\\\");\\n\\n        uint256 timelock = block.number.add(blocksNeededForQueue);\\n        if (_status == STATUS.RESERVEMANAGER || _status == STATUS.LIQUIDITYMANAGER) {\\n            timelock = block.number.add(blocksNeededForQueue.mul(2));\\n        }\\n        permissionQueue.push(\\n            Queue({managing: _status, toPermit: _address, calculator: _calculator, supplyController: _supplyController, timelockEnd: timelock, nullify: false, executed: false})\\n        );\\n        emit PermissionQueued(_status, _address);\\n    }\\n\\n    /**\\n     *  @notice enable queued permission\\n     *  @param _index uint256\\n     */\\n    function execute(uint256 _index) external {\\n        require(timelockEnabled == true, \\\"Timelock is disabled, use enable\\\");\\n\\n        Queue memory info = permissionQueue[_index];\\n\\n        require(!info.nullify, \\\"Action has been nullified\\\");\\n        require(!info.executed, \\\"Action has already been executed\\\");\\n        require(block.number >= info.timelockEnd, \\\"Timelock not complete\\\");\\n\\n        if (info.managing == STATUS.SPANA) {\\n            // 9\\n            sPANA = IsPana(info.toPermit);\\n        } else {\\n            permissions[info.managing][info.toPermit] = true;\\n\\n            if (info.managing == STATUS.LIQUIDITYTOKEN) {\\n                bondCalculator[info.toPermit] = info.calculator;\\n                supplyController[info.toPermit] = info.supplyController;\\n            }\\n            (bool registered, ) = indexInRegistry(info.toPermit, info.managing);\\n            if (!registered) {\\n                registry[info.managing].push(info.toPermit);\\n\\n                if (info.managing == STATUS.LIQUIDITYTOKEN) {\\n                    (bool reg, uint256 index) = indexInRegistry(info.toPermit, STATUS.RESERVETOKEN);\\n                    if (reg) {\\n                        delete registry[STATUS.RESERVETOKEN][index];\\n                    }\\n                } else if (info.managing == STATUS.RESERVETOKEN) {\\n                    (bool reg, uint256 index) = indexInRegistry(info.toPermit, STATUS.LIQUIDITYTOKEN);\\n                    if (reg) {\\n                        delete registry[STATUS.LIQUIDITYTOKEN][index];\\n                    }\\n                }\\n            }\\n        }\\n        permissionQueue[_index].executed = true;\\n        emit Permissioned(info.toPermit, info.managing, true);\\n    }\\n\\n    /**\\n     * @notice cancel timelocked action\\n     * @param _index uint256\\n     */\\n    function nullify(uint256 _index) external onlyGovernor {\\n        permissionQueue[_index].nullify = true;\\n    }\\n\\n    /**\\n     * @notice disables timelocked functions\\n     */\\n    function disableTimelock() external onlyGovernor {\\n        require(timelockEnabled == true, \\\"timelock already disabled\\\");\\n        if (onChainGovernanceTimelock != 0 && onChainGovernanceTimelock <= block.number) {\\n            timelockEnabled = false;\\n        } else {\\n            onChainGovernanceTimelock = block.number.add(blocksNeededForQueue.mul(7)); // 7-day timelock\\n        }\\n    }\\n\\n    /**\\n     * @notice enables timelocks after initilization\\n     */\\n    function initialize() external onlyGovernor {\\n        require(initialized == false, \\\"Already initialized\\\");\\n        timelockEnabled = true;\\n        initialized = true;\\n    }\\n\\n    /* ========== VIEW FUNCTIONS ========== */\\n\\n    /**\\n     * @notice returns excess reserves not backing tokens\\n     * @return uint\\n     */\\n    function excessReserves() public view override returns (uint256) {\\n        return totalReserves.sub(PANA.totalSupply().sub(totalDebt));\\n    }\\n\\n    /**\\n     * @notice returns PANA valuation of asset\\n     * @param _token address\\n     * @param _amount uint256\\n     * @return value_ uint256\\n     */\\n    function tokenValue(address _token, uint256 _amount) public view override returns (uint256 value_) {\\n        require(baseValue != 0, \\\"Base value is not set\\\");\\n\\n        if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            value_ = IBondingCalculator(bondCalculator[_token]).valuation(_token, _amount, baseValue);\\n        }\\n        else {\\n            value_ = _amount.mul(baseValue).mul(10**IERC20Metadata(address(PANA)).decimals()).div(10**9).div(10**IERC20Metadata(_token).decimals());\\n        }\\n    }\\n\\n    /**\\n     * @notice returns supply metric that cannot be manipulated by debt\\n     * @dev use this any time you need to query supply\\n     * @return uint256\\n     */\\n    function baseSupply() external view override returns (uint256) {\\n        return PANA.totalSupply() - panaDebt;\\n    }\\n\\n    /**\\n     * @notice sets PANA token base value\\n     * @param _baseValue base value of PANA expressed in terms of X PANA per 1 reserve token (DAI), 9 decimals \\n     */\\n    function setBaseValue(uint256 _baseValue) external onlyGovernor {\\n        baseValue = _baseValue;\\n    }\\n}\\n\",\"keccak256\":\"0x7139b8b4b71202f58d1f65358e7dac3c9dee8ec4d0c1cd6cbd1207426d7e72ba\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x610100604052600c60c08190526b15539055551213d49256915160a21b60e090815262000030916000919062000256565b506040805180820190915260168082527f54726561737572793a206e6f742061636365707465640000000000000000000060209092019182526200007791600f9162000256565b506040805180820190915260168082527f54726561737572793a206e6f7420617070726f766564000000000000000000006020909201918252620000be9160109162000256565b506040805180820190915260178082527f54726561737572793a20696e76616c696420746f6b656e0000000000000000006020909201918252620001059160119162000256565b5060408051808201909152601f8082527f54726561737572793a20696e73756666696369656e742072657365727665730060209092019182526200014c9160129162000256565b503480156200015a57600080fd5b5060405162004ecc38038062004ecc833981810160405260608110156200018057600080fd5b5080516020820151604092830151600180546001600160a01b0319166001600160a01b038316908117909155935192939192909182917f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b0383166200022e576040805162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a2050414e4160701b604482015290519081900360640190fd5b5060609190911b6001600160601b031916608052600c805461ffff1916905560a05262000302565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200028e5760008555620002d9565b82601f10620002a957805160ff1916838001178555620002d9565b82800160010185558215620002d9579182015b82811115620002d9578251825591602001919060010190620002bc565b50620002e7929150620002eb565b5090565b5b80821115620002e75760008155600101620002ec565b60805160601c60a051614b44620003886000398061260a52806135e552806139a752806139ff52508061098a5280610d745280610e0f52806111f95280611258528061146052806115695280611bde528061233b52806127a75280612c365280613052528061310e5280613385528061341d52806135435280613d7f5250614b446000f3fe608060405234801561001057600080fd5b50600436106102c75760003560e01c80638129fc1c1161017b578063bcb8e701116100d8578063d796ffb81161008c578063f182178311610071578063f1821783146107b4578063fc7b9c18146107e0578063fe0d94c1146107e8576102c7565b8063d796ffb814610747578063dc92552d14610773576102c7565b8063c77af709116100bd578063c77af70914610711578063ce2b7f0c14610719578063d07f390f1461073f576102c7565b8063bcb8e701146106dd578063bf7e214f14610709576102c7565b80639fef32cc1161012f578063b320f6a911610114578063b320f6a91461069b578063b39df88e146106a3578063bc157ac1146106ab576102c7565b80639fef32cc1461066d578063a44b828714610675576102c7565b80638f840ddd116101605780638f840ddd146105ef57806393988b53146105f75780639edd8d4314610641576102c7565b80638129fc1c146105df578063860f5048146105e7576102c7565b806340c10f191161022957806361bb9c52116101dd57806377e93ca8116101c257806377e93ca8146105a95780637a9e5e4b146105b15780637d921af0146105d7576102c7565b806361bb9c521461058457806371a45c951461058c576102c7565b8063505f43291161020e578063505f4329146104ee578063529918311461052f5780635619004b1461055e576102c7565b806340c10f191461043b578063503edcf014610467576102c7565b80631af4da70116102805780632b7ce500116102655780632b7ce500146103e7578063330dd345146103ef5780633faf24a11461041e576102c7565b80631af4da701461038857806328d58adf146103ca576102c7565b80630c3513a8116102b15780630c3513a81461032657806312422d2314610340578063158ef93e1461036c576102c7565b8062f714ce146102cc5780630b0eee30146102fa575b600080fd5b6102f8600480360360408110156102e257600080fd5b50803590602001356001600160a01b0316610805565b005b6102f86004803603604081101561031057600080fd5b506001600160a01b038135169060200135610a84565b61032e610d67565b60408051918252519081900360200190f35b6102f86004803603604081101561035657600080fd5b50803590602001356001600160a01b0316610e0b565b61037461133e565b604080519115158252519081900360200190f35b6103ae6004803603602081101561039e57600080fd5b50356001600160a01b031661134c565b604080516001600160a01b039092168252519081900360200190f35b6102f8600480360360208110156103e057600080fd5b5035611367565b6102f86115ba565b6103746004803603604081101561040557600080fd5b50803560ff1690602001356001600160a01b03166119b8565b6102f86004803603602081101561043457600080fd5b50356119d8565b6102f86004803603604081101561045157600080fd5b506001600160a01b038135169060200135611ac9565b6104846004803603602081101561047d57600080fd5b5035611caf565b6040518088600b81111561049457fe5b8152602001876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018481526020018315158152602001821515815260200197505050505050505060405180910390f35b6102f86004803603608081101561050457600080fd5b5060ff813516906001600160a01b036020820135811691604081013582169160609091013516611d10565b6102f86004803603604081101561054557600080fd5b50803560ff1690602001356001600160a01b0316611ff9565b61032e6004803603602081101561057457600080fd5b50356001600160a01b0316612201565b61032e612213565b6102f8600480360360208110156105a257600080fd5b5035612219565b6103ae612339565b6102f8600480360360208110156105c757600080fd5b50356001600160a01b031661235d565b6102f8612493565b6102f861263d565b61032e6127a0565b61032e612830565b6106266004803603604081101561060d57600080fd5b5080356001600160a01b0316906020013560ff16612836565b60408051921515835260208301919091528051918290030190f35b6102f86004803603604081101561065757600080fd5b506001600160a01b03813516906020013561291e565b6103ae612a26565b6103ae6004803603604081101561068b57600080fd5b5060ff8135169060200135612a35565b610374612a6d565b61032e612a76565b61032e600480360360608110156106c157600080fd5b508035906001600160a01b036020820135169060400135612a7c565b61032e600480360360408110156106f357600080fd5b50803590602001356001600160a01b03166131b3565b6103ae6135b3565b61032e6135c2565b6103ae6004803603602081101561072f57600080fd5b50356001600160a01b03166135c8565b61032e6135e3565b6102f86004803603604081101561075d57600080fd5b50803590602001356001600160a01b0316613607565b6102f86004803603608081101561078957600080fd5b5060ff813516906001600160a01b036020820135811691604081013582169160609091013516613844565b61032e600480360360408110156107ca57600080fd5b506001600160a01b038135169060200135613bb2565b61032e613e12565b6102f8600480360360208110156107fe57600080fd5b5035613e18565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166108e05760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b50509250505060405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460109060ff166109795760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5060006109868284613bb2565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379cc679033836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b5050600854610a259250905082614352565b600855610a3c6001600160a01b0383163385614394565b604080518481526020810183905281516001600160a01b038516927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb928290030190a2505050565b6001600160a01b03821660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615610b62573360009081527fc59312466997bb42aaaf719ece141047820e6b34531e1670dc1852a453648f0f602052604090205460109060ff16610b5c5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50610bfc565b3360009081527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0602052604090205460109060ff16610bfa5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b505b6001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460ff1680610c7957506001600160a01b03821660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff165b15610d10576000610c8a8383613bb2565b9050610c94610d67565b811115601290610cfd5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600854610d0b9082614352565b600855505b610d246001600160a01b0383163383614394565b6040805182815290516001600160a01b038416917fb4460e34f1e91c4fa28eb7fac4cbd88cf530ef54a67e1978cd5edd9f77033ead919081900360200190a25050565b6000610e06610dfd6009547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dcb57600080fd5b505afa158015610ddf573d6000803e3d6000fd5b505050506040513d6020811015610df557600080fd5b505190614352565b60085490614352565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610ee8573360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460109060ff16610edf5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50829050611030565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460109060ff16610f805760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166110225760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5061102d8284613bb2565b90505b6011816110965760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506002546040805163ae5c6cd360e01b8152600481018490523360248201526001604482015290516001600160a01b039092169163ae5c6cd39160648082019260009290919082900301818387803b1580156110f157600080fd5b505af1158015611105573d6000803e3d6000fd5b50503360008181526007602090815260409182902054600254835163313bc71360e21b8152600481019590955292519095506001600160a01b03909216935063c4ef1c4c9260248082019391829003018186803b15801561116557600080fd5b505afa158015611179573d6000803e3d6000fd5b505050506040513d602081101561118f57600080fd5b505111156111e4576040805162461bcd60e51b815260206004820152601760248201527f54726561737572793a2065786365656473206c696d6974000000000000000000604482015290519081900360640190fd5b6009546111f19082614513565b6009819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156112cd57604080516340c10f1960e01b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916340c10f1991604480830192600092919082900301818387803b15801561129f57600080fd5b505af11580156112b3573d6000803e3d6000fd5b5050600a546112c59250905082614513565b600a556112f1565b6008546112da9082614352565b6008556112f16001600160a01b0383163385614394565b604080518481526020810183905281516001600160a01b0385169233927f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6929081900390910190a3505050565b600c54610100900460ff1681565b6005602052600090815260409020546001600160a01b031681565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460ff16806113d257503360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460ff165b6010906114385760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506040805163079cc67960e41b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916379cc679091604480830192600092919082900301818387803b1580156114a757600080fd5b505af11580156114bb573d6000803e3d6000fd5b50506002546040805163ae5c6cd360e01b81526004810186905233602482015260006044820181905291516001600160a01b03909316945063ae5c6cd393506064808201939182900301818387803b15801561151657600080fd5b505af115801561152a573d6000803e3d6000fd5b505060095461153c9250905082614352565b600955600a5461154c9082614352565b600a55604080518281526020810183905281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a350565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561160857600080fd5b505afa15801561161c573d6000803e3d6000fd5b505050506040513d602081101561163257600080fd5b50516000906001600160a01b031633146116a55760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5060026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d805460408051828502810185019091528181526060939092919083018282801561172857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161170a575b5050505050905060005b81518110156118615760026000908152600460205282517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7919084908490811061177857fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156118595761185661184f8383815181106117b657fe5b60200260200101518484815181106117ca57fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561181e57600080fd5b505afa158015611832573d6000803e3d6000fd5b505050506040513d602081101561184857600080fd5b5051613bb2565b8490614513565b92505b600101611732565b506005600052600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b46594225080546040805182850281018501909152818152606093909291908301828280156118e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118c4575b5050505050905060005b81518110156119825760056000908152600460205282517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05919084908490811061193257fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161561197a576119776119708383815181106117b657fe5b8590614513565b93505b6001016118ec565b50600883905560405183907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a2505050565b600460209081526000928352604080842090915290825290205460ff1681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2657600080fd5b505afa158015611a3a573d6000803e3d6000fd5b505050506040513d6020811015611a5057600080fd5b50516000906001600160a01b03163314611ac35760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600e55565b3360009081527f2645749a946633740611cfc8178319f0958659d6922e4bf7e3a08b44789f53a4602052604090205460109060ff16611b615760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50611b6a61456d565b611b72610d67565b811115601290611bdb5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c5357600080fd5b505af1158015611c67573d6000803e3d6000fd5b50506040805184815290516001600160a01b03861693503392507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09181900360200190a35050565b600b8181548110611cbf57600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015460ff80851696506001600160a01b0361010095869004811696948116959316939282821692041687565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015611d5e57600080fd5b505afa158015611d72573d6000803e3d6000fd5b505050506040513d6020811015611d8857600080fd5b50516000906001600160a01b03163314611dfb5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c5460ff1615611e54576040805162461bcd60e51b815260206004820152601160248201527f55736520717565756554696d656c6f636b000000000000000000000000000000604482015290519081900360640190fd5b600984600b811115611e6257fe5b1415611e8857600280546001600160a01b0319166001600160a01b038516179055611fa3565b60016004600086600b811115611e9a57fe5b600b811115611ea557fe5b8152602080820192909252604090810160009081206001600160a01b03881682529092529020805460ff1916911515919091179055600584600b811115611ee857fe5b1415611f36576001600160a01b03838116600090815260056020908152604080832080546001600160a01b031990811688871617909155600690925290912080549091169183169190911790555b6000611f428486612836565b50905080611fa1576003600086600b811115611f5a57fe5b600b811115611f6557fe5b8152602080820192909252604001600090812080546001810182559082529190200180546001600160a01b0319166001600160a01b0386161790555b505b83600b811115611faf57fe5b604080516001600160a01b03861681526001602082015281517f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e1713929181900390910190a250505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561204757600080fd5b505afa15801561205b573d6000803e3d6000fd5b505050506040513d602081101561207157600080fd5b50516001600160a01b031633148061210a5750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b1580156120d257600080fd5b505afa1580156120e6573d6000803e3d6000fd5b505050506040513d60208110156120fc57600080fd5b50516001600160a01b031633145b61215b576040805162461bcd60e51b815260206004820152601960248201527f4f6e6c7920676f7665726e6f72206f7220677561726469616e00000000000000604482015290519081900360640190fd5b60006004600084600b81111561216d57fe5b600b81111561217857fe5b8152602080820192909252604090810160009081206001600160a01b03861682529092529020805460ff191691151591909117905581600b8111156121b957fe5b604080516001600160a01b03841681526000602082015281517f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e1713929181900390910190a25050565b60076020526000908152604090205481565b600e5481565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561226757600080fd5b505afa15801561227b573d6000803e3d6000fd5b505050506040513d602081101561229157600080fd5b50516000906001600160a01b031633146123045760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600b828154811061231457fe5b60009182526020909120600590910201600401805460ff191691151591909117905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156123ab57600080fd5b505afa1580156123bf573d6000803e3d6000fd5b505050506040513d60208110156123d557600080fd5b50516000906001600160a01b031633146124485760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156124e157600080fd5b505afa1580156124f5573d6000803e3d6000fd5b505050506040513d602081101561250b57600080fd5b50516000906001600160a01b0316331461257e5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c5460ff1615156001146125db576040805162461bcd60e51b815260206004820152601960248201527f74696d656c6f636b20616c72656164792064697361626c656400000000000000604482015290519081900360640190fd5b600d54158015906125ee575043600d5411155b1561260257600c805460ff1916905561263b565b6126376126307f000000000000000000000000000000000000000000000000000000000000000060076147a2565b4390614513565b600d555b565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561268b57600080fd5b505afa15801561269f573d6000803e3d6000fd5b505050506040513d60208110156126b557600080fd5b50516000906001600160a01b031633146127285760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c54610100900460ff1615612786576040805162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600c805461ff001960ff1990911660011716610100179055565b6000600a547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127fe57600080fd5b505afa158015612812573d6000803e3d6000fd5b505050506040513d602081101561282857600080fd5b505103905090565b60085481565b60008060606003600085600b81111561284b57fe5b600b81111561285657fe5b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156128b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161289a575b5050505050905060005b815181101561290d578181815181106128d757fe5b60200260200101516001600160a01b0316866001600160a01b03161415612905576001935091506129179050565b6001016128c2565b5060008092509250505b9250929050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561296c57600080fd5b505afa158015612980573d6000803e3d6000fd5b505050506040513d602081101561299657600080fd5b50516000906001600160a01b03163314612a095760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03909116600090815260076020526040902055565b6002546001600160a01b031681565b60036020528160005260406000208181548110612a5157600080fd5b6000918252602090912001546001600160a01b03169150829050565b600c5460ff1681565b600d5481565b6001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604081205460ff1615612b5a5760046000805b600b811115612acd57fe5b81526020808201929092526040908101600090812033825290925290205460109060ff16612b545760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50612c05565b6001600160a01b03831660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615612ba4576004600081612ac2565b60405162461bcd60e51b815260206004820190815260118054600260001961010060018416150201909116046024840181905290928291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b612c1a6001600160a01b0384163330876147fb565b6000612c268486613bb2565b9050612c328184614352565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1933846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612cab57600080fd5b505af1158015612cbf573d6000803e3d6000fd5b5050600854612cd19250905082614513565b600855604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a26001600160a01b03841660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff168015612d7757506001600160a01b038481166000908152600660205260409020541615155b8015612dfc57506001600160a01b038085166000908152600660209081526040918290205482516376ad5a4d60e01b815292519316926376ad5a4d926004808201939291829003018186803b158015612dcf57600080fd5b505afa158015612de3573d6000803e3d6000fd5b505050506040513d6020811015612df957600080fd5b50515b8015612e8157506001600160a01b0380851660009081526006602090815260409182902054825163506bedc760e11b8152925193169263a0d7db8e926004808201939291829003018186803b158015612e5457600080fd5b505afa158015612e68573d6000803e3d6000fd5b505050506040513d6020811015612e7e57600080fd5b50515b156131ab576001600160a01b038085166000908152600660205260408082205481516366ac5b0b60e11b81529151929384938493929091169163cd58b616916004808301926060929190829003018186803b158015612edf57600080fd5b505afa158015612ef3573d6000803e3d6000fd5b505050506040513d6060811015612f0957600080fd5b5080516020820151604090920151909450909250905082156131a757808015612faa575081876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612f7b57600080fd5b505afa158015612f8f573d6000803e3d6000fd5b505050506040513d6020811015612fa557600080fd5b505110155b1561304f576001600160a01b03808816600081815260066020526040902054612fd4921684614394565b6001600160a01b0380881660009081526006602052604080822054815163b390c0ab60e01b81526004810188905260248101879052915193169263b390c0ab9260448084019391929182900301818387803b15801561303257600080fd5b505af1158015613046573d6000803e3d6000fd5b505050506131a7565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d60208110156130e757600080fd5b5051106131a7576001600160a01b03808816600090815260066020526040902054613137917f00000000000000000000000000000000000000000000000000000000000000008116911685614394565b6001600160a01b03808816600090815260066020526040808220548151630801f16960e11b8152600481018890529151931692631003e2d29260248084019391929182900301818387803b15801561318e57600080fd5b505af11580156131a2573d6000803e3d6000fd5b505050505b5050505b509392505050565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040812054600f9060ff166132545760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b503360009081527f0c1469ad586d86b6976c45826d7ae56d76ee516e37a2bccffbe904b74dbae7ea602052604090205460109060ff166132ed5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50613419826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561332a57600080fd5b505afa15801561333e573d6000803e3d6000fd5b505050506040513d602081101561335457600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161341391633b9aca009183916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b1580156133cc57600080fd5b505afa1580156133e0573d6000803e3d6000fd5b505050506040513d60208110156133f657600080fd5b505160ff16600a0a61340d8964174876e8006147a2565b906147a2565b90614983565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561348857600080fd5b505afa15801561349c573d6000803e3d6000fd5b505050506040513d60208110156134b257600080fd5b5051811115613508576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682050414e412072657365727665730000000000000000604482015290519081900360640190fd5b61351e6135158385613bb2565b60085490614513565b6008556135366001600160a01b0383163330866147fb565b61356a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383614394565b604080518481526020810183905281516001600160a01b038516927f4a4b015d5d009102c176c319f709dd2078a8f42103ac46297c4ded381b1d9db9928290030190a292915050565b6001546001600160a01b031681565b600a5481565b6006602052600090815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460109060ff1661369f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166137415760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506137576001600160a01b0382163330856147fb565b60006137638284613bb2565b6002546040805163ae5c6cd360e01b81526004810184905233602482015260006044820181905291519394506001600160a01b039092169263ae5c6cd392606480820193929182900301818387803b1580156137be57600080fd5b505af11580156137d2573d6000803e3d6000fd5b50506009546137e49250905082614352565b6009556008546137f49082614513565b600855604080518481526020810183905281516001600160a01b0385169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a3505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561389257600080fd5b505afa1580156138a6573d6000803e3d6000fd5b505050506040513d60208110156138bc57600080fd5b50516000906001600160a01b0316331461392f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03831661394357600080fd5b600c5460ff16151560011461399f576040805162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015290519081900360640190fd5b60006139cb437f0000000000000000000000000000000000000000000000000000000000000000614513565b9050600385600b8111156139db57fe5b14806139f25750600685600b8111156139f057fe5b145b15613a2857613a256126307f000000000000000000000000000000000000000000000000000000000000000060026147a2565b90505b600b6040518060e0016040528087600b811115613a4157fe5b81526001600160a01b038088166020808401919091528782166040840152908616606083015260808201859052600060a0830181905260c090920182905283546001818101865594835291208251600590920201805492939092839160ff199091169083600b811115613ab057fe5b0217905550602082015181547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b03928316810291909117835560408401516001840180546001600160a01b031990811692851692909217905560608501516002850180549092169316929092179091556080830151600383015560a08301516004909201805460c09094015160ff199094169215159290921761ff0019169215150291909117905584600b811115613b6f57fe5b604080516001600160a01b038716815290517fc822ff41836a6dc998393c71843db8adcbbf01721f41b32389f6838ecb1ea9c89181900360200190a25050505050565b6000600e5460001415613c0c576040805162461bcd60e51b815260206004820152601560248201527f426173652076616c7565206973206e6f74207365740000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615613ce8576001600160a01b0380841660008181526005602090815260409182902054600e54835163bd689a4560e01b815260048101959095526024850188905260448501529151919093169263bd689a459260648082019391829003018186803b158015613cb557600080fd5b505afa158015613cc9573d6000803e3d6000fd5b505050506040513d6020811015613cdf57600080fd5b50519050613e0c565b613e09836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613d2457600080fd5b505afa158015613d38573d6000803e3d6000fd5b505050506040513d6020811015613d4e57600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161341391633b9aca009183916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b158015613dc657600080fd5b505afa158015613dda573d6000803e3d6000fd5b505050506040513d6020811015613df057600080fd5b5051600e5460ff909116600a0a9061340d9089906147a2565b90505b92915050565b60095481565b600c5460ff161515600114613e74576040805162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015290519081900360640190fd5b613e7c614ad8565b600b8281548110613e8957fe5b600091825260209091206040805160e081019091526005909202018054829060ff16600b811115613eb657fe5b600b811115613ec157fe5b815281546001600160a01b03610100918290048116602084015260018401548116604084015260028401541660608301526003830154608083015260049092015460ff808216151560a0808501919091529390910416151560c09091015281015190915015613f77576040805162461bcd60e51b815260206004820152601960248201527f416374696f6e20686173206265656e206e756c6c696669656400000000000000604482015290519081900360640190fd5b8060c0015115613fce576040805162461bcd60e51b815260206004820181905260248201527f416374696f6e2068617320616c7265616479206265656e206578656375746564604482015290519081900360640190fd5b8060800151431015614027576040805162461bcd60e51b815260206004820152601560248201527f54696d656c6f636b206e6f7420636f6d706c6574650000000000000000000000604482015290519081900360640190fd5b60098151600b81111561403657fe5b1415614065576020810151600280546001600160a01b0319166001600160a01b039092169190911790556142ba565b6001600460008360000151600b81111561407b57fe5b600b81111561408657fe5b815260208082019290925260409081016000908120858401516001600160a01b031682529092529020805460ff191691151591909117905560058151600b8111156140cd57fe5b141561412b57604080820151602080840180516001600160a01b0390811660009081526005845285812080549583166001600160a01b0319968716179055606087015192518216815260069093529390912080549190931691161790555b600061413f82602001518360000151612836565b509050806142b857600360008360000151600b81111561415b57fe5b600b81111561416657fe5b81526020808201929092526040016000908120848301518154600181018355918352929091200180546001600160a01b0319166001600160a01b0390921691909117905560058251600b8111156141b957fe5b1415614233576000806141d184602001516002612836565b91509150811561422c57600260005260036020527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80548290811061421257fe5b600091825260209091200180546001600160a01b03191690555b50506142b8565b60028251600b81111561424257fe5b14156142b85760008061425a84602001516005612836565b9150915081156142b557600560005260036020527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b46594225080548290811061429b57fe5b600091825260209091200180546001600160a01b03191690555b50505b505b6001600b83815481106142c957fe5b6000918252602090912060046005909202010180549115156101000261ff00199092169190911790558051600b8111156142ff57fe5b7f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e17138260200151600160405180836001600160a01b0316815260200182151581526020019250505060405180910390a25050565b6000613e0983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506149c5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106144265780518252601f199092019160209182019101614407565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614488576040519150601f19603f3d011682016040523d82523d6000602084013e61448d565b606091505b50915091508180156144bb5750805115806144bb57508080602001905160208110156144b857600080fd5b50515b61450c576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b600082820183811015613e09576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80546040805182850281018501909152818152606093909291908301828280156145ef57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116145d1575b5050505050905060005b81518110156146885760026000908152600460205282517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7919084908490811061463f57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156146805761467d61184f8383815181106117b657fe5b92505b6001016145f9565b506005600052600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805460408051828502810185019091528181526060939092919083018282801561470957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116146eb575b5050505050905060005b81518110156119825760056000908152600460205282517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05919084908490811061475957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161561479a576147976119708383815181106117b657fe5b93505b600101614713565b6000826147b157506000613e0c565b828202828482816147be57fe5b0414613e095760405162461bcd60e51b8152600401808060200182810382526021815260200180614b176021913960400191505060405180910390fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17815292518251600094606094938a169392918291908083835b602083106148955780518252601f199092019160209182019101614876565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146148f7576040519150601f19603f3d011682016040523d82523d6000602084013e6148fc565b606091505b509150915081801561492a57508051158061492a575080806020019051602081101561492757600080fd5b50515b61497b576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b6000613e0983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614a5c565b60008184841115614a545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a19578181015183820152602001614a01565b50505050905090810190601f168015614a465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183614aab5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315614a19578181015183820152602001614a01565b506000838581614ab757fe5b049050838581614ac357fe5b06818502018514614ad057fe5b949350505050565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0909101529056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102c75760003560e01c80638129fc1c1161017b578063bcb8e701116100d8578063d796ffb81161008c578063f182178311610071578063f1821783146107b4578063fc7b9c18146107e0578063fe0d94c1146107e8576102c7565b8063d796ffb814610747578063dc92552d14610773576102c7565b8063c77af709116100bd578063c77af70914610711578063ce2b7f0c14610719578063d07f390f1461073f576102c7565b8063bcb8e701146106dd578063bf7e214f14610709576102c7565b80639fef32cc1161012f578063b320f6a911610114578063b320f6a91461069b578063b39df88e146106a3578063bc157ac1146106ab576102c7565b80639fef32cc1461066d578063a44b828714610675576102c7565b80638f840ddd116101605780638f840ddd146105ef57806393988b53146105f75780639edd8d4314610641576102c7565b80638129fc1c146105df578063860f5048146105e7576102c7565b806340c10f191161022957806361bb9c52116101dd57806377e93ca8116101c257806377e93ca8146105a95780637a9e5e4b146105b15780637d921af0146105d7576102c7565b806361bb9c521461058457806371a45c951461058c576102c7565b8063505f43291161020e578063505f4329146104ee578063529918311461052f5780635619004b1461055e576102c7565b806340c10f191461043b578063503edcf014610467576102c7565b80631af4da70116102805780632b7ce500116102655780632b7ce500146103e7578063330dd345146103ef5780633faf24a11461041e576102c7565b80631af4da701461038857806328d58adf146103ca576102c7565b80630c3513a8116102b15780630c3513a81461032657806312422d2314610340578063158ef93e1461036c576102c7565b8062f714ce146102cc5780630b0eee30146102fa575b600080fd5b6102f8600480360360408110156102e257600080fd5b50803590602001356001600160a01b0316610805565b005b6102f86004803603604081101561031057600080fd5b506001600160a01b038135169060200135610a84565b61032e610d67565b60408051918252519081900360200190f35b6102f86004803603604081101561035657600080fd5b50803590602001356001600160a01b0316610e0b565b61037461133e565b604080519115158252519081900360200190f35b6103ae6004803603602081101561039e57600080fd5b50356001600160a01b031661134c565b604080516001600160a01b039092168252519081900360200190f35b6102f8600480360360208110156103e057600080fd5b5035611367565b6102f86115ba565b6103746004803603604081101561040557600080fd5b50803560ff1690602001356001600160a01b03166119b8565b6102f86004803603602081101561043457600080fd5b50356119d8565b6102f86004803603604081101561045157600080fd5b506001600160a01b038135169060200135611ac9565b6104846004803603602081101561047d57600080fd5b5035611caf565b6040518088600b81111561049457fe5b8152602001876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018481526020018315158152602001821515815260200197505050505050505060405180910390f35b6102f86004803603608081101561050457600080fd5b5060ff813516906001600160a01b036020820135811691604081013582169160609091013516611d10565b6102f86004803603604081101561054557600080fd5b50803560ff1690602001356001600160a01b0316611ff9565b61032e6004803603602081101561057457600080fd5b50356001600160a01b0316612201565b61032e612213565b6102f8600480360360208110156105a257600080fd5b5035612219565b6103ae612339565b6102f8600480360360208110156105c757600080fd5b50356001600160a01b031661235d565b6102f8612493565b6102f861263d565b61032e6127a0565b61032e612830565b6106266004803603604081101561060d57600080fd5b5080356001600160a01b0316906020013560ff16612836565b60408051921515835260208301919091528051918290030190f35b6102f86004803603604081101561065757600080fd5b506001600160a01b03813516906020013561291e565b6103ae612a26565b6103ae6004803603604081101561068b57600080fd5b5060ff8135169060200135612a35565b610374612a6d565b61032e612a76565b61032e600480360360608110156106c157600080fd5b508035906001600160a01b036020820135169060400135612a7c565b61032e600480360360408110156106f357600080fd5b50803590602001356001600160a01b03166131b3565b6103ae6135b3565b61032e6135c2565b6103ae6004803603602081101561072f57600080fd5b50356001600160a01b03166135c8565b61032e6135e3565b6102f86004803603604081101561075d57600080fd5b50803590602001356001600160a01b0316613607565b6102f86004803603608081101561078957600080fd5b5060ff813516906001600160a01b036020820135811691604081013582169160609091013516613844565b61032e600480360360408110156107ca57600080fd5b506001600160a01b038135169060200135613bb2565b61032e613e12565b6102f8600480360360208110156107fe57600080fd5b5035613e18565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166108e05760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b50509250505060405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460109060ff166109795760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5060006109868284613bb2565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379cc679033836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b5050600854610a259250905082614352565b600855610a3c6001600160a01b0383163385614394565b604080518481526020810183905281516001600160a01b038516927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb928290030190a2505050565b6001600160a01b03821660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615610b62573360009081527fc59312466997bb42aaaf719ece141047820e6b34531e1670dc1852a453648f0f602052604090205460109060ff16610b5c5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50610bfc565b3360009081527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0602052604090205460109060ff16610bfa5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b505b6001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460ff1680610c7957506001600160a01b03821660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff165b15610d10576000610c8a8383613bb2565b9050610c94610d67565b811115601290610cfd5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600854610d0b9082614352565b600855505b610d246001600160a01b0383163383614394565b6040805182815290516001600160a01b038416917fb4460e34f1e91c4fa28eb7fac4cbd88cf530ef54a67e1978cd5edd9f77033ead919081900360200190a25050565b6000610e06610dfd6009547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dcb57600080fd5b505afa158015610ddf573d6000803e3d6000fd5b505050506040513d6020811015610df557600080fd5b505190614352565b60085490614352565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610ee8573360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460109060ff16610edf5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50829050611030565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460109060ff16610f805760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166110225760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5061102d8284613bb2565b90505b6011816110965760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506002546040805163ae5c6cd360e01b8152600481018490523360248201526001604482015290516001600160a01b039092169163ae5c6cd39160648082019260009290919082900301818387803b1580156110f157600080fd5b505af1158015611105573d6000803e3d6000fd5b50503360008181526007602090815260409182902054600254835163313bc71360e21b8152600481019590955292519095506001600160a01b03909216935063c4ef1c4c9260248082019391829003018186803b15801561116557600080fd5b505afa158015611179573d6000803e3d6000fd5b505050506040513d602081101561118f57600080fd5b505111156111e4576040805162461bcd60e51b815260206004820152601760248201527f54726561737572793a2065786365656473206c696d6974000000000000000000604482015290519081900360640190fd5b6009546111f19082614513565b6009819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156112cd57604080516340c10f1960e01b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916340c10f1991604480830192600092919082900301818387803b15801561129f57600080fd5b505af11580156112b3573d6000803e3d6000fd5b5050600a546112c59250905082614513565b600a556112f1565b6008546112da9082614352565b6008556112f16001600160a01b0383163385614394565b604080518481526020810183905281516001600160a01b0385169233927f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6929081900390910190a3505050565b600c54610100900460ff1681565b6005602052600090815260409020546001600160a01b031681565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460ff16806113d257503360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460ff165b6010906114385760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506040805163079cc67960e41b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916379cc679091604480830192600092919082900301818387803b1580156114a757600080fd5b505af11580156114bb573d6000803e3d6000fd5b50506002546040805163ae5c6cd360e01b81526004810186905233602482015260006044820181905291516001600160a01b03909316945063ae5c6cd393506064808201939182900301818387803b15801561151657600080fd5b505af115801561152a573d6000803e3d6000fd5b505060095461153c9250905082614352565b600955600a5461154c9082614352565b600a55604080518281526020810183905281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a350565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561160857600080fd5b505afa15801561161c573d6000803e3d6000fd5b505050506040513d602081101561163257600080fd5b50516000906001600160a01b031633146116a55760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b5060026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d805460408051828502810185019091528181526060939092919083018282801561172857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161170a575b5050505050905060005b81518110156118615760026000908152600460205282517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7919084908490811061177857fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156118595761185661184f8383815181106117b657fe5b60200260200101518484815181106117ca57fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561181e57600080fd5b505afa158015611832573d6000803e3d6000fd5b505050506040513d602081101561184857600080fd5b5051613bb2565b8490614513565b92505b600101611732565b506005600052600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b46594225080546040805182850281018501909152818152606093909291908301828280156118e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118c4575b5050505050905060005b81518110156119825760056000908152600460205282517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05919084908490811061193257fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161561197a576119776119708383815181106117b657fe5b8590614513565b93505b6001016118ec565b50600883905560405183907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a2505050565b600460209081526000928352604080842090915290825290205460ff1681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2657600080fd5b505afa158015611a3a573d6000803e3d6000fd5b505050506040513d6020811015611a5057600080fd5b50516000906001600160a01b03163314611ac35760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600e55565b3360009081527f2645749a946633740611cfc8178319f0958659d6922e4bf7e3a08b44789f53a4602052604090205460109060ff16611b615760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50611b6a61456d565b611b72610d67565b811115601290611bdb5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c5357600080fd5b505af1158015611c67573d6000803e3d6000fd5b50506040805184815290516001600160a01b03861693503392507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09181900360200190a35050565b600b8181548110611cbf57600080fd5b60009182526020909120600590910201805460018201546002830154600384015460049094015460ff80851696506001600160a01b0361010095869004811696948116959316939282821692041687565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015611d5e57600080fd5b505afa158015611d72573d6000803e3d6000fd5b505050506040513d6020811015611d8857600080fd5b50516000906001600160a01b03163314611dfb5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c5460ff1615611e54576040805162461bcd60e51b815260206004820152601160248201527f55736520717565756554696d656c6f636b000000000000000000000000000000604482015290519081900360640190fd5b600984600b811115611e6257fe5b1415611e8857600280546001600160a01b0319166001600160a01b038516179055611fa3565b60016004600086600b811115611e9a57fe5b600b811115611ea557fe5b8152602080820192909252604090810160009081206001600160a01b03881682529092529020805460ff1916911515919091179055600584600b811115611ee857fe5b1415611f36576001600160a01b03838116600090815260056020908152604080832080546001600160a01b031990811688871617909155600690925290912080549091169183169190911790555b6000611f428486612836565b50905080611fa1576003600086600b811115611f5a57fe5b600b811115611f6557fe5b8152602080820192909252604001600090812080546001810182559082529190200180546001600160a01b0319166001600160a01b0386161790555b505b83600b811115611faf57fe5b604080516001600160a01b03861681526001602082015281517f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e1713929181900390910190a250505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561204757600080fd5b505afa15801561205b573d6000803e3d6000fd5b505050506040513d602081101561207157600080fd5b50516001600160a01b031633148061210a5750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b1580156120d257600080fd5b505afa1580156120e6573d6000803e3d6000fd5b505050506040513d60208110156120fc57600080fd5b50516001600160a01b031633145b61215b576040805162461bcd60e51b815260206004820152601960248201527f4f6e6c7920676f7665726e6f72206f7220677561726469616e00000000000000604482015290519081900360640190fd5b60006004600084600b81111561216d57fe5b600b81111561217857fe5b8152602080820192909252604090810160009081206001600160a01b03861682529092529020805460ff191691151591909117905581600b8111156121b957fe5b604080516001600160a01b03841681526000602082015281517f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e1713929181900390910190a25050565b60076020526000908152604090205481565b600e5481565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561226757600080fd5b505afa15801561227b573d6000803e3d6000fd5b505050506040513d602081101561229157600080fd5b50516000906001600160a01b031633146123045760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600b828154811061231457fe5b60009182526020909120600590910201600401805460ff191691151591909117905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156123ab57600080fd5b505afa1580156123bf573d6000803e3d6000fd5b505050506040513d60208110156123d557600080fd5b50516000906001600160a01b031633146124485760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156124e157600080fd5b505afa1580156124f5573d6000803e3d6000fd5b505050506040513d602081101561250b57600080fd5b50516000906001600160a01b0316331461257e5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c5460ff1615156001146125db576040805162461bcd60e51b815260206004820152601960248201527f74696d656c6f636b20616c72656164792064697361626c656400000000000000604482015290519081900360640190fd5b600d54158015906125ee575043600d5411155b1561260257600c805460ff1916905561263b565b6126376126307f000000000000000000000000000000000000000000000000000000000000000060076147a2565b4390614513565b600d555b565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561268b57600080fd5b505afa15801561269f573d6000803e3d6000fd5b505050506040513d60208110156126b557600080fd5b50516000906001600160a01b031633146127285760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50600c54610100900460ff1615612786576040805162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600c805461ff001960ff1990911660011716610100179055565b6000600a547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127fe57600080fd5b505afa158015612812573d6000803e3d6000fd5b505050506040513d602081101561282857600080fd5b505103905090565b60085481565b60008060606003600085600b81111561284b57fe5b600b81111561285657fe5b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156128b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161289a575b5050505050905060005b815181101561290d578181815181106128d757fe5b60200260200101516001600160a01b0316866001600160a01b03161415612905576001935091506129179050565b6001016128c2565b5060008092509250505b9250929050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561296c57600080fd5b505afa158015612980573d6000803e3d6000fd5b505050506040513d602081101561299657600080fd5b50516000906001600160a01b03163314612a095760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03909116600090815260076020526040902055565b6002546001600160a01b031681565b60036020528160005260406000208181548110612a5157600080fd5b6000918252602090912001546001600160a01b03169150829050565b600c5460ff1681565b600d5481565b6001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604081205460ff1615612b5a5760046000805b600b811115612acd57fe5b81526020808201929092526040908101600090812033825290925290205460109060ff16612b545760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50612c05565b6001600160a01b03831660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615612ba4576004600081612ac2565b60405162461bcd60e51b815260206004820190815260118054600260001961010060018416150201909116046024840181905290928291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b612c1a6001600160a01b0384163330876147fb565b6000612c268486613bb2565b9050612c328184614352565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1933846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612cab57600080fd5b505af1158015612cbf573d6000803e3d6000fd5b5050600854612cd19250905082614513565b600855604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a26001600160a01b03841660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff168015612d7757506001600160a01b038481166000908152600660205260409020541615155b8015612dfc57506001600160a01b038085166000908152600660209081526040918290205482516376ad5a4d60e01b815292519316926376ad5a4d926004808201939291829003018186803b158015612dcf57600080fd5b505afa158015612de3573d6000803e3d6000fd5b505050506040513d6020811015612df957600080fd5b50515b8015612e8157506001600160a01b0380851660009081526006602090815260409182902054825163506bedc760e11b8152925193169263a0d7db8e926004808201939291829003018186803b158015612e5457600080fd5b505afa158015612e68573d6000803e3d6000fd5b505050506040513d6020811015612e7e57600080fd5b50515b156131ab576001600160a01b038085166000908152600660205260408082205481516366ac5b0b60e11b81529151929384938493929091169163cd58b616916004808301926060929190829003018186803b158015612edf57600080fd5b505afa158015612ef3573d6000803e3d6000fd5b505050506040513d6060811015612f0957600080fd5b5080516020820151604090920151909450909250905082156131a757808015612faa575081876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612f7b57600080fd5b505afa158015612f8f573d6000803e3d6000fd5b505050506040513d6020811015612fa557600080fd5b505110155b1561304f576001600160a01b03808816600081815260066020526040902054612fd4921684614394565b6001600160a01b0380881660009081526006602052604080822054815163b390c0ab60e01b81526004810188905260248101879052915193169263b390c0ab9260448084019391929182900301818387803b15801561303257600080fd5b505af1158015613046573d6000803e3d6000fd5b505050506131a7565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d60208110156130e757600080fd5b5051106131a7576001600160a01b03808816600090815260066020526040902054613137917f00000000000000000000000000000000000000000000000000000000000000008116911685614394565b6001600160a01b03808816600090815260066020526040808220548151630801f16960e11b8152600481018890529151931692631003e2d29260248084019391929182900301818387803b15801561318e57600080fd5b505af11580156131a2573d6000803e3d6000fd5b505050505b5050505b509392505050565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040812054600f9060ff166132545760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b503360009081527f0c1469ad586d86b6976c45826d7ae56d76ee516e37a2bccffbe904b74dbae7ea602052604090205460109060ff166132ed5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b50613419826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561332a57600080fd5b505afa15801561333e573d6000803e3d6000fd5b505050506040513d602081101561335457600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161341391633b9aca009183916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b1580156133cc57600080fd5b505afa1580156133e0573d6000803e3d6000fd5b505050506040513d60208110156133f657600080fd5b505160ff16600a0a61340d8964174876e8006147a2565b906147a2565b90614983565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561348857600080fd5b505afa15801561349c573d6000803e3d6000fd5b505050506040513d60208110156134b257600080fd5b5051811115613508576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682050414e412072657365727665730000000000000000604482015290519081900360640190fd5b61351e6135158385613bb2565b60085490614513565b6008556135366001600160a01b0383163330866147fb565b61356a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383614394565b604080518481526020810183905281516001600160a01b038516927f4a4b015d5d009102c176c319f709dd2078a8f42103ac46297c4ded381b1d9db9928290030190a292915050565b6001546001600160a01b031681565b600a5481565b6006602052600090815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460109060ff1661369f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a76020526040902054600f9060ff166137415760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506137576001600160a01b0382163330856147fb565b60006137638284613bb2565b6002546040805163ae5c6cd360e01b81526004810184905233602482015260006044820181905291519394506001600160a01b039092169263ae5c6cd392606480820193929182900301818387803b1580156137be57600080fd5b505af11580156137d2573d6000803e3d6000fd5b50506009546137e49250905082614352565b6009556008546137f49082614513565b600855604080518481526020810183905281516001600160a01b0385169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a3505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561389257600080fd5b505afa1580156138a6573d6000803e3d6000fd5b505050506040513d60208110156138bc57600080fd5b50516000906001600160a01b0316331461392f5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156108d15780601f106108a6576101008083540402835291602001916108d1565b506001600160a01b03831661394357600080fd5b600c5460ff16151560011461399f576040805162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015290519081900360640190fd5b60006139cb437f0000000000000000000000000000000000000000000000000000000000000000614513565b9050600385600b8111156139db57fe5b14806139f25750600685600b8111156139f057fe5b145b15613a2857613a256126307f000000000000000000000000000000000000000000000000000000000000000060026147a2565b90505b600b6040518060e0016040528087600b811115613a4157fe5b81526001600160a01b038088166020808401919091528782166040840152908616606083015260808201859052600060a0830181905260c090920182905283546001818101865594835291208251600590920201805492939092839160ff199091169083600b811115613ab057fe5b0217905550602082015181547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b03928316810291909117835560408401516001840180546001600160a01b031990811692851692909217905560608501516002850180549092169316929092179091556080830151600383015560a08301516004909201805460c09094015160ff199094169215159290921761ff0019169215150291909117905584600b811115613b6f57fe5b604080516001600160a01b038716815290517fc822ff41836a6dc998393c71843db8adcbbf01721f41b32389f6838ecb1ea9c89181900360200190a25050505050565b6000600e5460001415613c0c576040805162461bcd60e51b815260206004820152601560248201527f426173652076616c7565206973206e6f74207365740000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831660009081527f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05602052604090205460ff1615613ce8576001600160a01b0380841660008181526005602090815260409182902054600e54835163bd689a4560e01b815260048101959095526024850188905260448501529151919093169263bd689a459260648082019391829003018186803b158015613cb557600080fd5b505afa158015613cc9573d6000803e3d6000fd5b505050506040513d6020811015613cdf57600080fd5b50519050613e0c565b613e09836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613d2457600080fd5b505afa158015613d38573d6000803e3d6000fd5b505050506040513d6020811015613d4e57600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161341391633b9aca009183916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b158015613dc657600080fd5b505afa158015613dda573d6000803e3d6000fd5b505050506040513d6020811015613df057600080fd5b5051600e5460ff909116600a0a9061340d9089906147a2565b90505b92915050565b60095481565b600c5460ff161515600114613e74576040805162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015290519081900360640190fd5b613e7c614ad8565b600b8281548110613e8957fe5b600091825260209091206040805160e081019091526005909202018054829060ff16600b811115613eb657fe5b600b811115613ec157fe5b815281546001600160a01b03610100918290048116602084015260018401548116604084015260028401541660608301526003830154608083015260049092015460ff808216151560a0808501919091529390910416151560c09091015281015190915015613f77576040805162461bcd60e51b815260206004820152601960248201527f416374696f6e20686173206265656e206e756c6c696669656400000000000000604482015290519081900360640190fd5b8060c0015115613fce576040805162461bcd60e51b815260206004820181905260248201527f416374696f6e2068617320616c7265616479206265656e206578656375746564604482015290519081900360640190fd5b8060800151431015614027576040805162461bcd60e51b815260206004820152601560248201527f54696d656c6f636b206e6f7420636f6d706c6574650000000000000000000000604482015290519081900360640190fd5b60098151600b81111561403657fe5b1415614065576020810151600280546001600160a01b0319166001600160a01b039092169190911790556142ba565b6001600460008360000151600b81111561407b57fe5b600b81111561408657fe5b815260208082019290925260409081016000908120858401516001600160a01b031682529092529020805460ff191691151591909117905560058151600b8111156140cd57fe5b141561412b57604080820151602080840180516001600160a01b0390811660009081526005845285812080549583166001600160a01b0319968716179055606087015192518216815260069093529390912080549190931691161790555b600061413f82602001518360000151612836565b509050806142b857600360008360000151600b81111561415b57fe5b600b81111561416657fe5b81526020808201929092526040016000908120848301518154600181018355918352929091200180546001600160a01b0319166001600160a01b0390921691909117905560058251600b8111156141b957fe5b1415614233576000806141d184602001516002612836565b91509150811561422c57600260005260036020527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80548290811061421257fe5b600091825260209091200180546001600160a01b03191690555b50506142b8565b60028251600b81111561424257fe5b14156142b85760008061425a84602001516005612836565b9150915081156142b557600560005260036020527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b46594225080548290811061429b57fe5b600091825260209091200180546001600160a01b03191690555b50505b505b6001600b83815481106142c957fe5b6000918252602090912060046005909202010180549115156101000261ff00199092169190911790558051600b8111156142ff57fe5b7f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e17138260200151600160405180836001600160a01b0316815260200182151581526020019250505060405180910390a25050565b6000613e0983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506149c5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106144265780518252601f199092019160209182019101614407565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614488576040519150601f19603f3d011682016040523d82523d6000602084013e61448d565b606091505b50915091508180156144bb5750805115806144bb57508080602001905160208110156144b857600080fd5b50515b61450c576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b600082820183811015613e09576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d80546040805182850281018501909152818152606093909291908301828280156145ef57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116145d1575b5050505050905060005b81518110156146885760026000908152600460205282517f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7919084908490811061463f57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156146805761467d61184f8383815181106117b657fe5b92505b6001016145f9565b506005600052600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805460408051828502810185019091528181526060939092919083018282801561470957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116146eb575b5050505050905060005b81518110156119825760056000908152600460205282517f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f05919084908490811061475957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161561479a576147976119708383815181106117b657fe5b93505b600101614713565b6000826147b157506000613e0c565b828202828482816147be57fe5b0414613e095760405162461bcd60e51b8152600401808060200182810382526021815260200180614b176021913960400191505060405180910390fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17815292518251600094606094938a169392918291908083835b602083106148955780518252601f199092019160209182019101614876565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146148f7576040519150601f19603f3d011682016040523d82523d6000602084013e6148fc565b606091505b509150915081801561492a57508051158061492a575080806020019051602081101561492757600080fd5b50515b61497b576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b6000613e0983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614a5c565b60008184841115614a545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a19578181015183820152602001614a01565b50505050905090810190601f168015614a465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183614aab5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315614a19578181015183820152602001614a01565b506000838581614ab757fe5b049050838581614ac357fe5b06818502018514614ad057fe5b949350505050565b6040805160e08101909152806000815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0909101529056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "baseSupply()": {
        "details": "use this any time you need to query supply",
        "returns": {
          "_0": "uint256"
        }
      },
      "deposit(uint256,address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_profit": "uint256",
          "_token": "address"
        },
        "returns": {
          "send_": "uint256"
        }
      },
      "depositForRedemption(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        },
        "returns": {
          "send_": "uint256"
        }
      },
      "disable(uint8,address)": {
        "params": {
          "_status": "STATUS",
          "_toDisable": "address"
        }
      },
      "enable(uint8,address,address,address)": {
        "params": {
          "_address": "address",
          "_calculator": "address",
          "_status": "STATUS"
        }
      },
      "excessReserves()": {
        "returns": {
          "_0": "uint"
        }
      },
      "execute(uint256)": {
        "params": {
          "_index": "uint256"
        }
      },
      "incurDebt(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "indexInRegistry(address,uint8)": {
        "returns": {
          "_0": "(bool, uint256)"
        }
      },
      "manage(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_recipient": "address"
        }
      },
      "nullify(uint256)": {
        "params": {
          "_index": "uint256"
        }
      },
      "queueTimelock(uint8,address,address,address)": {
        "params": {
          "_address": "address",
          "_calculator": "address",
          "_status": "STATUS"
        }
      },
      "repayDebtWithPANA(uint256)": {
        "params": {
          "_amount": "uint256"
        }
      },
      "repayDebtWithReserve(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "setBaseValue(uint256)": {
        "params": {
          "_baseValue": "base value of PANA expressed in terms of X PANA per 1 reserve token (DAI), 9 decimals "
        }
      },
      "setDebtLimit(address,uint256)": {
        "params": {
          "_address": "address",
          "_limit": "uint256"
        }
      },
      "tokenValue(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        },
        "returns": {
          "value_": "uint256"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "auditReserves()": {
        "notice": "takes inventory of all tracked assetsalways consolidate to recognized reserves before audit"
      },
      "baseSupply()": {
        "notice": "returns supply metric that cannot be manipulated by debt"
      },
      "deposit(uint256,address,uint256)": {
        "notice": "allow approved address to deposit an asset for PANA"
      },
      "depositForRedemption(uint256,address)": {
        "notice": "allow approved address to deposit reserve token for available PANA. No new PANA is minted."
      },
      "disable(uint8,address)": {
        "notice": "disable permission from address"
      },
      "disableTimelock()": {
        "notice": "disables timelocked functions"
      },
      "enable(uint8,address,address,address)": {
        "notice": "enable permission from queue"
      },
      "excessReserves()": {
        "notice": "returns excess reserves not backing tokens"
      },
      "execute(uint256)": {
        "notice": "enable queued permission"
      },
      "incurDebt(uint256,address)": {
        "notice": "allow approved address to borrow reserves"
      },
      "indexInRegistry(address,uint8)": {
        "notice": "check if registry contains address"
      },
      "initialize()": {
        "notice": "enables timelocks after initilization"
      },
      "manage(address,uint256)": {
        "notice": "allow approved address to withdraw assets"
      },
      "mint(address,uint256)": {
        "notice": "mint new PANA using excess reserves"
      },
      "nullify(uint256)": {
        "notice": "cancel timelocked action"
      },
      "queueTimelock(uint8,address,address,address)": {
        "notice": "queue address to receive permission"
      },
      "repayDebtWithPANA(uint256)": {
        "notice": "allow approved address to repay borrowed reserves with PANA"
      },
      "repayDebtWithReserve(uint256,address)": {
        "notice": "allow approved address to repay borrowed reserves with reserves"
      },
      "setBaseValue(uint256)": {
        "notice": "sets PANA token base value"
      },
      "setDebtLimit(address,uint256)": {
        "notice": "set max debt for address"
      },
      "tokenValue(address,uint256)": {
        "notice": "returns PANA valuation of asset"
      },
      "withdraw(uint256,address)": {
        "notice": "allow approved address to burn PANA for reserves"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 314,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 316,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPanaAuthority)1976"
      },
      {
        "astId": 8077,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "sPANA",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IsPana)2441"
      },
      {
        "astId": 8082,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "registry",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_enum(STATUS)8058,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 8088,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "permissions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_enum(STATUS)8058,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 8092,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "bondCalculator",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 8096,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "supplyController",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 8100,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "debtLimit",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8102,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "totalReserves",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 8104,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "totalDebt",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 8106,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "panaDebt",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 8109,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "permissionQueue",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_struct(Queue)8073_storage)dyn_storage"
      },
      {
        "astId": 8113,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "timelockEnabled",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 8115,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "initialized",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 8117,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "onChainGovernanceTimelock",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 8119,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "baseValue",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 8122,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "notAccepted",
        "offset": 0,
        "slot": "15",
        "type": "t_string_storage"
      },
      {
        "astId": 8125,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "notApproved",
        "offset": 0,
        "slot": "16",
        "type": "t_string_storage"
      },
      {
        "astId": 8128,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "invalidToken",
        "offset": 0,
        "slot": "17",
        "type": "t_string_storage"
      },
      {
        "astId": 8131,
        "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
        "label": "insufficientReserves",
        "offset": 0,
        "slot": "18",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Queue)8073_storage)dyn_storage": {
        "base": "t_struct(Queue)8073_storage",
        "encoding": "dynamic_array",
        "label": "struct PanaTreasury.Queue[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IPanaAuthority)1976": {
        "encoding": "inplace",
        "label": "contract IPanaAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IsPana)2441": {
        "encoding": "inplace",
        "label": "contract IsPana",
        "numberOfBytes": "20"
      },
      "t_enum(STATUS)8058": {
        "encoding": "inplace",
        "label": "enum PanaTreasury.STATUS",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(STATUS)8058,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_enum(STATUS)8058",
        "label": "mapping(enum PanaTreasury.STATUS => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_enum(STATUS)8058,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_enum(STATUS)8058",
        "label": "mapping(enum PanaTreasury.STATUS => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Queue)8073_storage": {
        "encoding": "inplace",
        "label": "struct PanaTreasury.Queue",
        "members": [
          {
            "astId": 8060,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "managing",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(STATUS)8058"
          },
          {
            "astId": 8062,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "toPermit",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8064,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "calculator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 8066,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "supplyController",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 8068,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "timelockEnd",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 8070,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "nullify",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 8072,
            "contract": "contracts/treasury/Treasury.sol:PanaTreasury",
            "label": "executed",
            "offset": 1,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}